{"config":{"lang":["de"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"01_Einf\u00fchrung/","text":"World Wide Web (WWW) Das WWW ist ein globales und verteiltes Informationssystem bestehend aus Webseiten und anderen Web-Ressourcen (zB Bilder, Videos, ...). Web-Ressourcen werden auf Web-Servern bereitgestellt und sind \u00f6ffentlich abrufbar. Web-Ressourcen sind \u00fcber einen Uniform Resource Locator (URL) eindeutig identifiziert und abrufbar. Webseiten sind im WWW \u00fcber Hyperlinks miteinander verkn\u00fcpft, welche wiederum als URL ausgedr\u00fcckt werden. Webseiten k\u00f6nnen \u00fcber Web-Browser (auch Web-Clients genannt) geladen und bedient werden. Technische Grundlagen Das technische Fundament f\u00fcr das WWW bildet das Internet. Das Internet ist ein globales Netzwerk (Internet = interconnected network), welches Computer und andere Computer Netzwerke (Intranets) miteinander verkn\u00fcpft. Umgangsprachlich wird das WWW mit dem Internet oft gleichgesetzt. Aus einer technischen Perspektive ist dies jedoch nicht der Fall. Uniform Resource Locator (URL) Eine URL ist eine global eindeutige \"Adresse\" einer Web-Ressource. Zus\u00e4tzlich zur Identifikation gibt eine URL Aufschluss \u00fcber den Speicherort einer Web-Ressource. Ein Web-Browser kann \u00fcber eine URL Web-Ressourcen abrufen und anzeigen. URLs folgen einem definierten syntaktischen Aufbau: Schema (Scheme): Das Schema gibt den Typ der URL an. Bekannte Schemata sind zB http , https , ftp oder mailto . Die Schemaangabe wird mit einem : abgeschlossen. Zust\u00e4ndigkeit (Authority): Wesentlicher Bestandteil der Authority ist der Host , welcher als Domain-Name oder IP-Adresse angegeben werden kann. Optional kann die Authority eine Benutzerinformation enthalten, welche vor der Host-Angabe steht (Abgeschlossen durch ein @ ). Optional kann auch eine Port-Angabe angebracht werden (Eingeleitet durch einen : ). Pfad (Path): Der Pfad ist eine hierarchische Angabe einer konkreten Ressource innerhalb einer Authority. Alle Pfadbestandteile werden \u00e4hnlich zu einem Dateisystem mittels / getrennt. Abfrage (Query): Der Abfrage-Teil (Query-String) wird genutzt um optionale Schl\u00fcssel-Wert Paare anzugeben. Ein Query-String wird \u00fcber ein ? eingeleitet. Schl\u00fcssel-Wert Paare werden jeweils \u00fcber & getrennt. Mit = wird jeweils der Schl\u00fcssel mit dem zugeh\u00f6rigen Wert verkn\u00fcpft. Fragment: Fragmente k\u00f6nnen genutzt werden um Teile eine Ressource zu identifizieren, zB als Anker innerhalb einer Webseite. Fragmente werden \u00fcber ein # eingeleitet. Beispiel einer URL: userinfo host port \u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2534\u2510 https://john.doe@www.example.com:123/abc/def/?name=bla&q=abc#top \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u252c\u2518 scheme authority path query fragment Domain Name System (DNS) Das Internet basiert auf dem TCP/IP Netzwerk-Stack (Internetprotokollfamilie). Im TCP/IP Netzwerk-Stack werden alle Knoten des Netzwerkes \u00fcber eine IP-Adresse identifiziert. IP-Adressen sind \u00e4hnlich wie Telefonnummern f\u00fcr Menschen schwer einpr\u00e4gsam. DNS ist ein Internet-Dienst welcher, \u00e4hnlich zu einem Telefonbuch, Klarnamen zu IP-Adressen verwaltet und abrufbar macht. Beispielhafter Auszug aus der Datenbank eines DNS-Servers: wikipedia.org 185.102.12.2 fh-kufstein.ac.at 85.234.32.2 ... ... Typischer Ablauf einer DNS-Abfrage: Der Web-Browser nimmt in der Adresszeile einen URL entgegen, welcher unter anderem auch einen Domain-Namen enth\u00e4lt. Der Web-Browser macht im ersten Schritt eine Anfrage an den DNS-Server um die IP-Adresse des entsprechenden Domain-Namen zu erhalten. Erst nach Erhalt der IP-Adresse kann eine HTTP-Anfrage an den entsprechenden Web-Server gesendet werden. HTTP-Protokoll Das Hypertext Transfer Protocol (HTTP) ist ein zustandsloses Netzwerkprotokoll zur \u00dcbertragung von Daten in Rechnernetzen. Es wird haupts\u00e4chlich eingesetzt, um Webseiten aus dem WWW zu laden. Es ist jedoch nicht prinzipiell darauf beschr\u00e4nkt und auch als allgemeines Datei\u00fcbertragungsprotokoll verbreitet. Die Kommunikation findet dabei zwischen einem Client und Server statt. Die Kommunikation folgt dem Anfrage/Antwort Schema. Der Client sendet eine Anfrage und bekommt eine Antwort vom Server. Web-Browser Ein Web-Browser ist eine Software-Applikation, welche genutzt wird um auf das WWW zuzugreifen. Die popul\u00e4rsten Web-Browser sind Chrome , Firefox , Safari , Internet Explorer , Edge und Opera . Web-Browser bieten folgende \u00e4hnliche Bedienelemente: Tabs um mehrere Webseiten gleichzeitig zu \u00f6ffnen. Der Titel einer Webseite bzw. das sog. Favicon werden ebenfalls im Tab angezeigt. Eine Adressleiste zur Eingabe der URL welche geladen werden soll. F\u00fcr gesicherte Verbindungen (https) wird dies \u00fcber ein Schloss-Symbol angezeigt. Die Adressleiste fungiert meist auch als Eingabezeile f\u00fcr Suchmaschinen . Vor- und Zur\u00fcck-Buttons um in der Browser-Historie zu navigieren. Ein Button zum Neuladen einer Webseite ( Refresh oder Reload ). W\u00e4hrend des Ladens fungiert dieser als Stop-Button um das Laden abzubrechen. Ein Home-Button l\u00e4d eine hinterlegte Home-Seite. Mittels Bookmarks/Lesezeichen k\u00f6nnen Links auf Webseiten katalogisiert gespeichert werden. Innerhalb einer Download-Historie k\u00f6nnen vergangene Downloads wiedergefunden werden. Web-Browser k\u00f6nnen \u00fcber Extensions erweitert werden. W3C und Standardisierung Das World Wide Web Consortium (W3C) ist die prim\u00e4re internationale Standardisierungsorganisation des WWW. Das W3C ist f\u00fcr die Standadisierung der technischen Grundlagen des WWW zust\u00e4ndig. Gr\u00fcnder und Vorsitzender des W3C ist Tim Berners-Lee. Tim Berners-Lee ist der \"Erfinder\" des WWW. Der W3C Standadisierungsprozess gliedert sich in Dokumente mit unterschiedlichem Reifegrad: Working Draft (WD): \u00dcber Arbeitsentw\u00fcrfe unter Einbeziehung der \u00d6ffentlichkeit wird ein Standardisierungsdokument entwickelt Candidate Recommendation (CR): Stabiles Dokument, f\u00fcr welches bereits Implementierungen durchgef\u00fchrt werden Proposed Recommendation (PR): Ein PR hat den CR-Status finalisiert und wird an den W3C Advisory Council weitergegeben f\u00fcr eine finale Zustimmung. W3C Recommendation (REC): Nach Zustimmung des W3C Advisory Council wird die PR zur W3C-Recommendation bzw. W3C Standard. Beispiele f\u00fcr W3C Recommendations sind HTML, XML, CSS, PNG, SVG, DOM. Clientseitige Web-Technologien Zur Entwicklung von Webseiten bzw. Web-Anwendungen werden standardisierte Web-Technologien genutzt: Hypertext Markup Language (HTML): HTML wird genutzt um Inhalte zu strukturieren Cascading Stylesheets (CSS): CSS wird genutzt um Inhalte zu formatierung bzw. zu gestalten JavaScript: Mit JavaScript wird Verhalten und Dynamik in eine Webseite integriert","title":"01 Einf\u00fchrung"},{"location":"01_Einf\u00fchrung/#world-wide-web-www","text":"Das WWW ist ein globales und verteiltes Informationssystem bestehend aus Webseiten und anderen Web-Ressourcen (zB Bilder, Videos, ...). Web-Ressourcen werden auf Web-Servern bereitgestellt und sind \u00f6ffentlich abrufbar. Web-Ressourcen sind \u00fcber einen Uniform Resource Locator (URL) eindeutig identifiziert und abrufbar. Webseiten sind im WWW \u00fcber Hyperlinks miteinander verkn\u00fcpft, welche wiederum als URL ausgedr\u00fcckt werden. Webseiten k\u00f6nnen \u00fcber Web-Browser (auch Web-Clients genannt) geladen und bedient werden.","title":"World Wide Web (WWW)"},{"location":"01_Einf\u00fchrung/#technische-grundlagen","text":"Das technische Fundament f\u00fcr das WWW bildet das Internet. Das Internet ist ein globales Netzwerk (Internet = interconnected network), welches Computer und andere Computer Netzwerke (Intranets) miteinander verkn\u00fcpft. Umgangsprachlich wird das WWW mit dem Internet oft gleichgesetzt. Aus einer technischen Perspektive ist dies jedoch nicht der Fall.","title":"Technische Grundlagen"},{"location":"01_Einf\u00fchrung/#uniform-resource-locator-url","text":"Eine URL ist eine global eindeutige \"Adresse\" einer Web-Ressource. Zus\u00e4tzlich zur Identifikation gibt eine URL Aufschluss \u00fcber den Speicherort einer Web-Ressource. Ein Web-Browser kann \u00fcber eine URL Web-Ressourcen abrufen und anzeigen. URLs folgen einem definierten syntaktischen Aufbau: Schema (Scheme): Das Schema gibt den Typ der URL an. Bekannte Schemata sind zB http , https , ftp oder mailto . Die Schemaangabe wird mit einem : abgeschlossen. Zust\u00e4ndigkeit (Authority): Wesentlicher Bestandteil der Authority ist der Host , welcher als Domain-Name oder IP-Adresse angegeben werden kann. Optional kann die Authority eine Benutzerinformation enthalten, welche vor der Host-Angabe steht (Abgeschlossen durch ein @ ). Optional kann auch eine Port-Angabe angebracht werden (Eingeleitet durch einen : ). Pfad (Path): Der Pfad ist eine hierarchische Angabe einer konkreten Ressource innerhalb einer Authority. Alle Pfadbestandteile werden \u00e4hnlich zu einem Dateisystem mittels / getrennt. Abfrage (Query): Der Abfrage-Teil (Query-String) wird genutzt um optionale Schl\u00fcssel-Wert Paare anzugeben. Ein Query-String wird \u00fcber ein ? eingeleitet. Schl\u00fcssel-Wert Paare werden jeweils \u00fcber & getrennt. Mit = wird jeweils der Schl\u00fcssel mit dem zugeh\u00f6rigen Wert verkn\u00fcpft. Fragment: Fragmente k\u00f6nnen genutzt werden um Teile eine Ressource zu identifizieren, zB als Anker innerhalb einer Webseite. Fragmente werden \u00fcber ein # eingeleitet. Beispiel einer URL: userinfo host port \u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2534\u2510 https://john.doe@www.example.com:123/abc/def/?name=bla&q=abc#top \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u252c\u2518 scheme authority path query fragment","title":"Uniform Resource Locator (URL)"},{"location":"01_Einf\u00fchrung/#domain-name-system-dns","text":"Das Internet basiert auf dem TCP/IP Netzwerk-Stack (Internetprotokollfamilie). Im TCP/IP Netzwerk-Stack werden alle Knoten des Netzwerkes \u00fcber eine IP-Adresse identifiziert. IP-Adressen sind \u00e4hnlich wie Telefonnummern f\u00fcr Menschen schwer einpr\u00e4gsam. DNS ist ein Internet-Dienst welcher, \u00e4hnlich zu einem Telefonbuch, Klarnamen zu IP-Adressen verwaltet und abrufbar macht. Beispielhafter Auszug aus der Datenbank eines DNS-Servers: wikipedia.org 185.102.12.2 fh-kufstein.ac.at 85.234.32.2 ... ... Typischer Ablauf einer DNS-Abfrage: Der Web-Browser nimmt in der Adresszeile einen URL entgegen, welcher unter anderem auch einen Domain-Namen enth\u00e4lt. Der Web-Browser macht im ersten Schritt eine Anfrage an den DNS-Server um die IP-Adresse des entsprechenden Domain-Namen zu erhalten. Erst nach Erhalt der IP-Adresse kann eine HTTP-Anfrage an den entsprechenden Web-Server gesendet werden.","title":"Domain Name System (DNS)"},{"location":"01_Einf\u00fchrung/#http-protokoll","text":"Das Hypertext Transfer Protocol (HTTP) ist ein zustandsloses Netzwerkprotokoll zur \u00dcbertragung von Daten in Rechnernetzen. Es wird haupts\u00e4chlich eingesetzt, um Webseiten aus dem WWW zu laden. Es ist jedoch nicht prinzipiell darauf beschr\u00e4nkt und auch als allgemeines Datei\u00fcbertragungsprotokoll verbreitet. Die Kommunikation findet dabei zwischen einem Client und Server statt. Die Kommunikation folgt dem Anfrage/Antwort Schema. Der Client sendet eine Anfrage und bekommt eine Antwort vom Server.","title":"HTTP-Protokoll"},{"location":"01_Einf\u00fchrung/#web-browser","text":"Ein Web-Browser ist eine Software-Applikation, welche genutzt wird um auf das WWW zuzugreifen. Die popul\u00e4rsten Web-Browser sind Chrome , Firefox , Safari , Internet Explorer , Edge und Opera . Web-Browser bieten folgende \u00e4hnliche Bedienelemente: Tabs um mehrere Webseiten gleichzeitig zu \u00f6ffnen. Der Titel einer Webseite bzw. das sog. Favicon werden ebenfalls im Tab angezeigt. Eine Adressleiste zur Eingabe der URL welche geladen werden soll. F\u00fcr gesicherte Verbindungen (https) wird dies \u00fcber ein Schloss-Symbol angezeigt. Die Adressleiste fungiert meist auch als Eingabezeile f\u00fcr Suchmaschinen . Vor- und Zur\u00fcck-Buttons um in der Browser-Historie zu navigieren. Ein Button zum Neuladen einer Webseite ( Refresh oder Reload ). W\u00e4hrend des Ladens fungiert dieser als Stop-Button um das Laden abzubrechen. Ein Home-Button l\u00e4d eine hinterlegte Home-Seite. Mittels Bookmarks/Lesezeichen k\u00f6nnen Links auf Webseiten katalogisiert gespeichert werden. Innerhalb einer Download-Historie k\u00f6nnen vergangene Downloads wiedergefunden werden. Web-Browser k\u00f6nnen \u00fcber Extensions erweitert werden.","title":"Web-Browser"},{"location":"01_Einf\u00fchrung/#w3c-und-standardisierung","text":"Das World Wide Web Consortium (W3C) ist die prim\u00e4re internationale Standardisierungsorganisation des WWW. Das W3C ist f\u00fcr die Standadisierung der technischen Grundlagen des WWW zust\u00e4ndig. Gr\u00fcnder und Vorsitzender des W3C ist Tim Berners-Lee. Tim Berners-Lee ist der \"Erfinder\" des WWW. Der W3C Standadisierungsprozess gliedert sich in Dokumente mit unterschiedlichem Reifegrad: Working Draft (WD): \u00dcber Arbeitsentw\u00fcrfe unter Einbeziehung der \u00d6ffentlichkeit wird ein Standardisierungsdokument entwickelt Candidate Recommendation (CR): Stabiles Dokument, f\u00fcr welches bereits Implementierungen durchgef\u00fchrt werden Proposed Recommendation (PR): Ein PR hat den CR-Status finalisiert und wird an den W3C Advisory Council weitergegeben f\u00fcr eine finale Zustimmung. W3C Recommendation (REC): Nach Zustimmung des W3C Advisory Council wird die PR zur W3C-Recommendation bzw. W3C Standard. Beispiele f\u00fcr W3C Recommendations sind HTML, XML, CSS, PNG, SVG, DOM.","title":"W3C und Standardisierung"},{"location":"01_Einf\u00fchrung/#clientseitige-web-technologien","text":"Zur Entwicklung von Webseiten bzw. Web-Anwendungen werden standardisierte Web-Technologien genutzt: Hypertext Markup Language (HTML): HTML wird genutzt um Inhalte zu strukturieren Cascading Stylesheets (CSS): CSS wird genutzt um Inhalte zu formatierung bzw. zu gestalten JavaScript: Mit JavaScript wird Verhalten und Dynamik in eine Webseite integriert","title":"Clientseitige Web-Technologien"},{"location":"02_HTML/","text":"HTML Die Hypertext Markup Language (HTML) ist eine textbasierte Auszeichnungssprache zur Strukturierung von Webseiten (in diesem Zusammenhant als HTML-Dokumente bezeichnet). HTML basiert auf sog. Tags, welche als Text Bausteine mit den Zeichen < bzw. > definiert werden. HTML dient dabei nur der Strukturierung der Inhalte und legt keinerlei Formatierung fest. HTML-Markup Regeln Ein HTML-Element hat mehrere Bestandteile: - \u00d6ffnendes Tag: Ein \u00f6ffnendes Tag besteht aus den Klammersymbolen < und > und dem eingeschlossenen Tag-Name (zB <p> ). - Schlie\u00dfendes Tag: \u00c4hnlich zum \u00f6ffnenden Tag besteht das schlie\u00dfende Tag aus den Klammersymbolen < und > und dem eingeschlossenen Tag-Namen. Zus\u00e4tzlich wird durch Angabe des Slash-Symbols ( / ) das schlie\u00dfende Tag markiert (zB </p> ). - Inhalt: Der tats\u00e4chliche Inhalt des HTML-Elements kann nur Text sein oder es k\u00f6nnen auch weitere HTML-Elemente als Kindelemente sein. - Attribute: HTML-Elemente k\u00f6nnen Attribute besitzen, welche zus\u00e4tzliche Informationen zum HTML-Element liefern, welche nicht Teil des Inhalts sind. Attribute und zugeh\u00f6rige Attributwerte werden im \u00f6ffnenden Tag angegeben. Das Attribut wird \u00fcber = vom Attributwert getrennt und der Attributwert wird in \" gesetzt. Beispiel f\u00fcr ein HTML-Element: \u00d6ffnendes Tag Schlie\u00dfendes Tag \u250c\u2534\u2510 \u250c\u2534\u2500\u2510 <p>Ein HTML Beispiel</p> \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Inhalt \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 HTML-Element Beispiel f\u00fcr ein HTML-Element mit Attribut: \u00d6ffnendes Tag \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 <p class=\"my-class\">Ein HTML Beispiel</p> \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518 Attribut Attributwert Es gibt Au\u00dfnahmen, welche nicht den oben beschriebenene allgemeinen Regelungen folgen: - Leere HTML-Elemente: Es gibt HTML-Elemente, welche keinen expiziten textlichen Inhalt besitzen. Beispiele daf\u00fcr sind: - <br> : Zeilenumbruch - <hr> : Horizontale Trennline - <img> : Bilder - Boolsche Attribute: Es gibt Attribute, welche keinerlei Attributwert ben\u00f6tigen. Eine Angabe des Attributes w\u00fcrde einen Attributwert true implizieren. Ein Beispiel f\u00fcr ein boolsches Attribut ist disabled . Besondere syntaktische Konstrukte HTML Kommentare In den meisten Programmier- bzw. Auszeichnungssprachen gibt es Kommentare, welche vom Web-Browser zur Generierung der Anzeige ignoriert werden. Kommentare werden mit der Symbolfolge <!-- gestartet und mit --> beendet. <!-- Ein Beispiel Kommentar --> HTML Entities Es gibt unter anderem die Zeichen < , > , \" , & welche Teil der HTML Syntax sind. Diese Zeichen m\u00fcssen als spezielle HTML-Entity angegeben werden. Eine HTML-Entity wird \u00fcber ein & gestaret und mit einem ; abgeschlossen. Dazwischen befindet sich ein Entitiy Bezeichner. Beispiele f\u00fcr HTML-Entities: Zeichen HTML-Entity < &lt; > &gt; \" &quot; & &amp; Whitespace Als Whitespace werden jegliche Leerr\u00e4ume, Tabulatoren und Zeilenumbr\u00fcche bezeichnet. F\u00fcr die Darstellung von HTML hat Whitespace keine bedeutung. Der Web-Browser ignoriert Whitespace generell und reduziert Whitespace zwischen 2 W\u00f6rtern auf genau einen Leerraum. Die beiden Paragraphen im folgenden Beispiel resultieren in der selben Anzeige: <p>Beispiel f\u00fcr Whitespace</p> <p>Beispiel f\u00fcr Whitespace.</p> Aufbau eines HTML-Dokumentes HTML-Dokumente haben einen definierten Aufbau: Ein HTML-Dokument startet mit einem Doctype , welcher die Version von HTML angibt (hier: HTML 5). Dem Web-Browser wird damit mitgeteilt, welche HTML-Version zu verarbeiten ist. Ein HTML-Dokument hat html als Wurzelelement und 2 Kindelemente head und body Im head befinden sich sog. Metadaten zum Dokument (zumindest der Titel, angegeben durch das title Element) Im body befinden sich alle Inhalte, welche im Web-Browser dargestellt werden <!DOCTYPE html> <html> <head> <title>Meine Seite</title> </head> <body> <!-- HTML Elemente --> </body> </html> Flow Layout Das Default-Layout in HTML ist das sog. \"Flow Layout\", welches auch als \"Normales Layout\" bezeichnet wird. In HTML sind generell 2 Arten von Elementen definiert. Das sind einerseits Inline-Elemente und andererseits Block-Elemente : Block-Elemente : HTML-Elemente werden von oben nach unten aufeinander gestapelt. div ist das generische Block-Element. Inline-Elemente : HTML-Elemente werden entlang des Textflusses nebeneinander gesetzt. span ist das generische Inline-Element. Die HTML-Elemente werden zur Darstellung vom Web-Browser in der Reihenfolge angezeigt wie sie im HTML-Dokument angegeben wurden. Zu beachten ist dabei die Textrichtung, welche unter anderem von der Sprache des HTML-Dokumentes festgelegt wird. Die Textrichtung kann von Links nach Rechts ( ltr ) oder von Rechts nach Links ( rtl ) angegeben sein. Mit dem HTML-Attribut dir kann global auf dem html-Tag die Textrichtung ge\u00e4ndert werden (Default ist ltr ). F\u00fcr Sprache wie zB Arabisch oder Hebr\u00e4isch wird rtl genutzt. Beispiele f\u00fcr Block-Elemente sind: h1-h6 , p , table , ul und div . Beispiele f\u00fcr Inline-Elemente sind: strong , em , img , a , input und span . Wichtige HTML-Elemente \u00dcberschriften \u00dcberschriften werden \u00fcber die Tags h1-h6 angegeben. Die Zahlen 1-6 spezifizieren dabei die Hierarchieebene. \u00dcberschriften sind Block-Elemente. Beispiel f\u00fcr \u00dcberschriften: <h1>\u00dcberschrift Ebene 1</h1> <h2>\u00dcberschrift Ebene 2</h2> <h3>\u00dcberschrift Ebene 3</h3> <h4>\u00dcberschrift Ebene 4</h4> <h5>\u00dcberschrift Ebene 5</h5> <h6>\u00dcberschrift Ebene 6</h6> Textauszeichnung Um Textstellen gesondert hervorzuheben k\u00f6nnen die Tags strong oder em verwendet werden. Beispiel f\u00fcr Hervorhebungen: Das ist ein <strong>wichtiger</strong> Textabschnitt und dies ist ein <em>hervorgehobener</em> Textabschnitt. Paragraphen Zusammenh\u00e4ngende Textabschnitte werden als Paragraphen \u00fcber das p-Tag angegeben. Paragraphen sind Block-Elemente. Beispiel f\u00fcr 2 Paragraphen: <p>Ein erster Paragraph</p> <p>Ein zweiter Paragraph</p> Geordnete oder ungeordnete Listen Listen k\u00f6nnen \u00fcber die Tags ul (ungeordnet) oder ol (geordnet) angegeben werden. Mit li-Tags werden Listeneintr\u00e4ge angegeben. Listeneintr\u00e4ge m\u00fcssen dabei immer als Kindelemente von li oder ol angegeben werden. Beispiel f\u00fcr eine ungeordnete Liste: <ul> <li>Eintrag 1</li> <li>Eintrag 2</li> <li>Eintrag 3</li> </ul> Beispiel f\u00fcr eine geordnete Liste: <ol> <li>Eintrag 1</li> <li>Eintrag 2</li> <li>Eintrag 3</li> </ol> Hyperlinks Hyperlinks spielen eine besondere Rolle in HTML da sie die Grundlage f\u00fcr den sog. Hypertext darstellen. Sie liefern die M\u00f6glichkeit um unterschiedliche Webseiten miteinander zu verkn\u00fcpfen. Hyperlinks werden \u00fcber das a-Tag relisiert (a gilt dabei als Abk\u00fcrzung f\u00fcr Anchor). Wichtige Attribute von Hyperlinks sind href und target : - \u00dcber href wird eine URL angegeben, welche das Ziel des Hyperlinks definiert. - \u00dcber target gibt an wie das Hyperlink im Web-Browser ge\u00f6ffnet werden soll. Zum Beispiel wird mit der Angabe _blank ein neues Browserfenster oder ein neuer Tab (je nach Interpretation des Web-Browsers) ge\u00f6ffnet. Beispiel f\u00fcr ein Hyperlink: <a target=\"_blank\" href=\"https://www.fh-kufsteinn.ac.at\">Link</a> Bilder Um Bilder in einer Webseite einzuf\u00fcgen wird das img-Tag genutzt. Das Tag stellt das Attribut src bereit um eine URL auf ein Bild anzugeben. Mit dem Attribut alt wird die M\u00f6glichkeit bereitgestellt eine textliche Beschreibung des Bildinhalts zu geben. Dies kann zum Beispiel f\u00fcr Suchmaschinenoptimierung oder aber auch aus Gr\u00fcnden der Accessibility genutzt werden. Beispiel f\u00fcr ein Bild: <img src=\"images/dinosaur.jpg\" alt=\"Kopf und Toros eines Dinosaurierskelet\"> Tabellen Zur Darstellung von tabellarischen Daten werden Tabellen benutzt. Tabellen sollen in keinem Fall dazu verwendet werden um Layouts zu erzeugen. \u00dcber das table-Tag kann eine Tabelle definiert werden. Zeilen in einer Tabelle werden \u00fcber das tr-Tag erzeugt. Innerhalb der Zeilen k\u00f6nnen Zellen definiert werden mit td-Tags (td f\u00fcr Tabledata). F\u00fcr die Kopfzeile k\u00f6nnen Zellen mittels th-Tags definiert werden. <table> <tr> <th>Band</th> <th>Album</th> <th>Ver\u00f6ffentlichungsjahr</th> </tr> <tr> <td>U2</td> <td>Boy</td> <td>1980</td> </tr> <tr> <td>Radiohead</td> <td>OK Computer</td> <td>1997</td> </tr> <tr> <td>The Mars Volta</td> <td>De-Loused in the Comatorium</td> <td>2003</td> </tr> </table> In manchen F\u00e4llen ist es n\u00f6tig Zellen in einer Tabelle \u00fcber mehrere Spalten oder Zeilen zu verteilen. Mit den Attributen colspan bzw. rowspan kann f\u00fcr eine Zelle definiert werden \u00fcber wieviele Spalten bzw. Zeilen diese verteilt werden soll. Formulare Formulare werden genutzt um Benutzereingaben zu erm\u00f6glichen. Die eingegebenen Daten k\u00f6nnen direkt an einen Web-Server gesendet werden oder auch lokal verarbeitet werden. Jedes Formular wird \u00fcber ein form-Tag umgeben. Innerhalb eines Formular befinden sich Formularfelder. G\u00e4ngige Formularfelder sind ein- oder mehrzeilige Textfelder, Auswahlfelder, Radio-Buttons oder Datumsfelder. Einzelne Formularfelder k\u00f6nnen \u00fcber das Tag fieldset gruppiert werden. Ein Fieldset kann \u00fcber das legend-Tag eine entsprechende Beschriftung bekommen. Beschriftungen f\u00fcr einzelne Formularfelder k\u00f6nnen ebenfalls mit dem Tag label durchgef\u00fchrt werden. Das label-Tag stellt das Attribut for bereit mit dem das Attribut id eines entsprechenden Formularfeldes referenziert wird. Beispiel eines HTML-Formulars mit Text, Datums und Radio-Button Eingaben: <form> <p> <label for=\"input-name\">Name</label> <input type=\"text\" placeholder=\"Name\" id=\"input-name\" name=\"name\"> </p> <p> <label for=\"input-birthday\">Geburtstag</label> <input type=\"date\" placeholder=\"Geburtstag\" id=\"input-birthday\" name=\"birthday\"> </p> <fieldset> <legend>Priorit\u00e4t</legend> <p> <label for=\"input-priority-1\"> <input id=\"input-priority-1\" type=\"radio\" name=\"priority\" value=\"1\"> Hoch </label> </p> <p> <label for=\"input-priority-2\"> <input id=\"input-priority-2\" type=\"radio\" name=\"priority\" value=\"2\"> Mittel </label> </p> <p> <label for=\"input-priority-3\"> <input id=\"input-priority-3\" type=\"radio\" name=\"priority\" value=\"3\"> Niedrig </label> </p> </fieldset> <label> </form> Strukturierung eins HTML-Dokuments Im Beispiel wird ein typischer Aufbau einer Webseite skizziert. HTML stellt Elemente bereit, welche eine spezifische Bedeutung f\u00fcr den Inhalt implizieren. Diese Elemente sollen zur Strukturierung verwendet werden, sodass das HTML-Markup Bedeutung erh\u00e4lt. F\u00fcr Web-Crawler oder Assistenztechnologien (zB Braille-Browser, Screenreader) kann die Webseite somit auch interpretiert werden. Folgend sollen die wichtigsten Struktur-Elemente kurz beschrieben werden: <main> : Dieses Tag sollte nur einmal pro Webseite verwendet werden und soll als Wrapper f\u00fcr die wesentlichen Inhalte der Webseite fungieren. <article> : Schlie\u00dft einen zusammenh\u00e4ngenden Inhalt ein, welcher f\u00fcr sich stehen kann. <section> : Gruppierungselement um einen zusammenh\u00e4ngenden Teil einer Webseite zu gruppieren. <aside> : Nicht direkt mit dem <main> Inhalt verkn\u00fcpfte Inhalte. <nav> : Enth\u00e4lt die Hauptnavigation der Website. <header> : Stellt einleitenden Inhalt dar. <footer> : Stellt abschlie\u00dfenden Inhalt dar. Validit\u00e4t von HTML Um eine korrekte Interpretation des HTML-Dokumentes zu gew\u00e4hrleisten, muss sichergestellt werden, dass keinerlei syntaktische Fehler im HTML-Markup vorherrschen. HTML-Validatoren k\u00f6nnen genutzt werden um ein HTML-Dokument automatisiert auf syntaktische Fehler zu pr\u00fcfen. Das W3C stellt einen standardkonformen HTML-Validator zur Verf\u00fcgung ( https://validator.w3.org ). Dieser Validator unterscheidet zwischen Fehlern (Error) und Warnungen (Warning): - Fehler sollten immer behoben werden, da dies ein konkretes syntaktisches Problem bezeichnet. - Warnung k\u00f6nnen behoben werden, diese sind vorranging f\u00fcr Barrierefreiheit und Suchmaschinen vorteilhaft.","title":"02 HTML"},{"location":"02_HTML/#html","text":"Die Hypertext Markup Language (HTML) ist eine textbasierte Auszeichnungssprache zur Strukturierung von Webseiten (in diesem Zusammenhant als HTML-Dokumente bezeichnet). HTML basiert auf sog. Tags, welche als Text Bausteine mit den Zeichen < bzw. > definiert werden. HTML dient dabei nur der Strukturierung der Inhalte und legt keinerlei Formatierung fest.","title":"HTML"},{"location":"02_HTML/#html-markup-regeln","text":"Ein HTML-Element hat mehrere Bestandteile: - \u00d6ffnendes Tag: Ein \u00f6ffnendes Tag besteht aus den Klammersymbolen < und > und dem eingeschlossenen Tag-Name (zB <p> ). - Schlie\u00dfendes Tag: \u00c4hnlich zum \u00f6ffnenden Tag besteht das schlie\u00dfende Tag aus den Klammersymbolen < und > und dem eingeschlossenen Tag-Namen. Zus\u00e4tzlich wird durch Angabe des Slash-Symbols ( / ) das schlie\u00dfende Tag markiert (zB </p> ). - Inhalt: Der tats\u00e4chliche Inhalt des HTML-Elements kann nur Text sein oder es k\u00f6nnen auch weitere HTML-Elemente als Kindelemente sein. - Attribute: HTML-Elemente k\u00f6nnen Attribute besitzen, welche zus\u00e4tzliche Informationen zum HTML-Element liefern, welche nicht Teil des Inhalts sind. Attribute und zugeh\u00f6rige Attributwerte werden im \u00f6ffnenden Tag angegeben. Das Attribut wird \u00fcber = vom Attributwert getrennt und der Attributwert wird in \" gesetzt. Beispiel f\u00fcr ein HTML-Element: \u00d6ffnendes Tag Schlie\u00dfendes Tag \u250c\u2534\u2510 \u250c\u2534\u2500\u2510 <p>Ein HTML Beispiel</p> \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 Inhalt \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 HTML-Element Beispiel f\u00fcr ein HTML-Element mit Attribut: \u00d6ffnendes Tag \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 <p class=\"my-class\">Ein HTML Beispiel</p> \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2518 Attribut Attributwert Es gibt Au\u00dfnahmen, welche nicht den oben beschriebenene allgemeinen Regelungen folgen: - Leere HTML-Elemente: Es gibt HTML-Elemente, welche keinen expiziten textlichen Inhalt besitzen. Beispiele daf\u00fcr sind: - <br> : Zeilenumbruch - <hr> : Horizontale Trennline - <img> : Bilder - Boolsche Attribute: Es gibt Attribute, welche keinerlei Attributwert ben\u00f6tigen. Eine Angabe des Attributes w\u00fcrde einen Attributwert true implizieren. Ein Beispiel f\u00fcr ein boolsches Attribut ist disabled .","title":"HTML-Markup Regeln"},{"location":"02_HTML/#besondere-syntaktische-konstrukte","text":"","title":"Besondere syntaktische Konstrukte"},{"location":"02_HTML/#html-kommentare","text":"In den meisten Programmier- bzw. Auszeichnungssprachen gibt es Kommentare, welche vom Web-Browser zur Generierung der Anzeige ignoriert werden. Kommentare werden mit der Symbolfolge <!-- gestartet und mit --> beendet. <!-- Ein Beispiel Kommentar -->","title":"HTML Kommentare"},{"location":"02_HTML/#html-entities","text":"Es gibt unter anderem die Zeichen < , > , \" , & welche Teil der HTML Syntax sind. Diese Zeichen m\u00fcssen als spezielle HTML-Entity angegeben werden. Eine HTML-Entity wird \u00fcber ein & gestaret und mit einem ; abgeschlossen. Dazwischen befindet sich ein Entitiy Bezeichner. Beispiele f\u00fcr HTML-Entities: Zeichen HTML-Entity < &lt; > &gt; \" &quot; & &amp;","title":"HTML Entities"},{"location":"02_HTML/#whitespace","text":"Als Whitespace werden jegliche Leerr\u00e4ume, Tabulatoren und Zeilenumbr\u00fcche bezeichnet. F\u00fcr die Darstellung von HTML hat Whitespace keine bedeutung. Der Web-Browser ignoriert Whitespace generell und reduziert Whitespace zwischen 2 W\u00f6rtern auf genau einen Leerraum. Die beiden Paragraphen im folgenden Beispiel resultieren in der selben Anzeige: <p>Beispiel f\u00fcr Whitespace</p> <p>Beispiel f\u00fcr Whitespace.</p>","title":"Whitespace"},{"location":"02_HTML/#aufbau-eines-html-dokumentes","text":"HTML-Dokumente haben einen definierten Aufbau: Ein HTML-Dokument startet mit einem Doctype , welcher die Version von HTML angibt (hier: HTML 5). Dem Web-Browser wird damit mitgeteilt, welche HTML-Version zu verarbeiten ist. Ein HTML-Dokument hat html als Wurzelelement und 2 Kindelemente head und body Im head befinden sich sog. Metadaten zum Dokument (zumindest der Titel, angegeben durch das title Element) Im body befinden sich alle Inhalte, welche im Web-Browser dargestellt werden <!DOCTYPE html> <html> <head> <title>Meine Seite</title> </head> <body> <!-- HTML Elemente --> </body> </html>","title":"Aufbau eines HTML-Dokumentes"},{"location":"02_HTML/#flow-layout","text":"Das Default-Layout in HTML ist das sog. \"Flow Layout\", welches auch als \"Normales Layout\" bezeichnet wird. In HTML sind generell 2 Arten von Elementen definiert. Das sind einerseits Inline-Elemente und andererseits Block-Elemente : Block-Elemente : HTML-Elemente werden von oben nach unten aufeinander gestapelt. div ist das generische Block-Element. Inline-Elemente : HTML-Elemente werden entlang des Textflusses nebeneinander gesetzt. span ist das generische Inline-Element. Die HTML-Elemente werden zur Darstellung vom Web-Browser in der Reihenfolge angezeigt wie sie im HTML-Dokument angegeben wurden. Zu beachten ist dabei die Textrichtung, welche unter anderem von der Sprache des HTML-Dokumentes festgelegt wird. Die Textrichtung kann von Links nach Rechts ( ltr ) oder von Rechts nach Links ( rtl ) angegeben sein. Mit dem HTML-Attribut dir kann global auf dem html-Tag die Textrichtung ge\u00e4ndert werden (Default ist ltr ). F\u00fcr Sprache wie zB Arabisch oder Hebr\u00e4isch wird rtl genutzt. Beispiele f\u00fcr Block-Elemente sind: h1-h6 , p , table , ul und div . Beispiele f\u00fcr Inline-Elemente sind: strong , em , img , a , input und span .","title":"Flow Layout"},{"location":"02_HTML/#wichtige-html-elemente","text":"","title":"Wichtige HTML-Elemente"},{"location":"02_HTML/#uberschriften","text":"\u00dcberschriften werden \u00fcber die Tags h1-h6 angegeben. Die Zahlen 1-6 spezifizieren dabei die Hierarchieebene. \u00dcberschriften sind Block-Elemente. Beispiel f\u00fcr \u00dcberschriften: <h1>\u00dcberschrift Ebene 1</h1> <h2>\u00dcberschrift Ebene 2</h2> <h3>\u00dcberschrift Ebene 3</h3> <h4>\u00dcberschrift Ebene 4</h4> <h5>\u00dcberschrift Ebene 5</h5> <h6>\u00dcberschrift Ebene 6</h6>","title":"\u00dcberschriften"},{"location":"02_HTML/#textauszeichnung","text":"Um Textstellen gesondert hervorzuheben k\u00f6nnen die Tags strong oder em verwendet werden. Beispiel f\u00fcr Hervorhebungen: Das ist ein <strong>wichtiger</strong> Textabschnitt und dies ist ein <em>hervorgehobener</em> Textabschnitt.","title":"Textauszeichnung"},{"location":"02_HTML/#paragraphen","text":"Zusammenh\u00e4ngende Textabschnitte werden als Paragraphen \u00fcber das p-Tag angegeben. Paragraphen sind Block-Elemente. Beispiel f\u00fcr 2 Paragraphen: <p>Ein erster Paragraph</p> <p>Ein zweiter Paragraph</p>","title":"Paragraphen"},{"location":"02_HTML/#geordnete-oder-ungeordnete-listen","text":"Listen k\u00f6nnen \u00fcber die Tags ul (ungeordnet) oder ol (geordnet) angegeben werden. Mit li-Tags werden Listeneintr\u00e4ge angegeben. Listeneintr\u00e4ge m\u00fcssen dabei immer als Kindelemente von li oder ol angegeben werden. Beispiel f\u00fcr eine ungeordnete Liste: <ul> <li>Eintrag 1</li> <li>Eintrag 2</li> <li>Eintrag 3</li> </ul> Beispiel f\u00fcr eine geordnete Liste: <ol> <li>Eintrag 1</li> <li>Eintrag 2</li> <li>Eintrag 3</li> </ol>","title":"Geordnete oder ungeordnete Listen"},{"location":"02_HTML/#hyperlinks","text":"Hyperlinks spielen eine besondere Rolle in HTML da sie die Grundlage f\u00fcr den sog. Hypertext darstellen. Sie liefern die M\u00f6glichkeit um unterschiedliche Webseiten miteinander zu verkn\u00fcpfen. Hyperlinks werden \u00fcber das a-Tag relisiert (a gilt dabei als Abk\u00fcrzung f\u00fcr Anchor). Wichtige Attribute von Hyperlinks sind href und target : - \u00dcber href wird eine URL angegeben, welche das Ziel des Hyperlinks definiert. - \u00dcber target gibt an wie das Hyperlink im Web-Browser ge\u00f6ffnet werden soll. Zum Beispiel wird mit der Angabe _blank ein neues Browserfenster oder ein neuer Tab (je nach Interpretation des Web-Browsers) ge\u00f6ffnet. Beispiel f\u00fcr ein Hyperlink: <a target=\"_blank\" href=\"https://www.fh-kufsteinn.ac.at\">Link</a>","title":"Hyperlinks"},{"location":"02_HTML/#bilder","text":"Um Bilder in einer Webseite einzuf\u00fcgen wird das img-Tag genutzt. Das Tag stellt das Attribut src bereit um eine URL auf ein Bild anzugeben. Mit dem Attribut alt wird die M\u00f6glichkeit bereitgestellt eine textliche Beschreibung des Bildinhalts zu geben. Dies kann zum Beispiel f\u00fcr Suchmaschinenoptimierung oder aber auch aus Gr\u00fcnden der Accessibility genutzt werden. Beispiel f\u00fcr ein Bild: <img src=\"images/dinosaur.jpg\" alt=\"Kopf und Toros eines Dinosaurierskelet\">","title":"Bilder"},{"location":"02_HTML/#tabellen","text":"Zur Darstellung von tabellarischen Daten werden Tabellen benutzt. Tabellen sollen in keinem Fall dazu verwendet werden um Layouts zu erzeugen. \u00dcber das table-Tag kann eine Tabelle definiert werden. Zeilen in einer Tabelle werden \u00fcber das tr-Tag erzeugt. Innerhalb der Zeilen k\u00f6nnen Zellen definiert werden mit td-Tags (td f\u00fcr Tabledata). F\u00fcr die Kopfzeile k\u00f6nnen Zellen mittels th-Tags definiert werden. <table> <tr> <th>Band</th> <th>Album</th> <th>Ver\u00f6ffentlichungsjahr</th> </tr> <tr> <td>U2</td> <td>Boy</td> <td>1980</td> </tr> <tr> <td>Radiohead</td> <td>OK Computer</td> <td>1997</td> </tr> <tr> <td>The Mars Volta</td> <td>De-Loused in the Comatorium</td> <td>2003</td> </tr> </table> In manchen F\u00e4llen ist es n\u00f6tig Zellen in einer Tabelle \u00fcber mehrere Spalten oder Zeilen zu verteilen. Mit den Attributen colspan bzw. rowspan kann f\u00fcr eine Zelle definiert werden \u00fcber wieviele Spalten bzw. Zeilen diese verteilt werden soll.","title":"Tabellen"},{"location":"02_HTML/#formulare","text":"Formulare werden genutzt um Benutzereingaben zu erm\u00f6glichen. Die eingegebenen Daten k\u00f6nnen direkt an einen Web-Server gesendet werden oder auch lokal verarbeitet werden. Jedes Formular wird \u00fcber ein form-Tag umgeben. Innerhalb eines Formular befinden sich Formularfelder. G\u00e4ngige Formularfelder sind ein- oder mehrzeilige Textfelder, Auswahlfelder, Radio-Buttons oder Datumsfelder. Einzelne Formularfelder k\u00f6nnen \u00fcber das Tag fieldset gruppiert werden. Ein Fieldset kann \u00fcber das legend-Tag eine entsprechende Beschriftung bekommen. Beschriftungen f\u00fcr einzelne Formularfelder k\u00f6nnen ebenfalls mit dem Tag label durchgef\u00fchrt werden. Das label-Tag stellt das Attribut for bereit mit dem das Attribut id eines entsprechenden Formularfeldes referenziert wird. Beispiel eines HTML-Formulars mit Text, Datums und Radio-Button Eingaben: <form> <p> <label for=\"input-name\">Name</label> <input type=\"text\" placeholder=\"Name\" id=\"input-name\" name=\"name\"> </p> <p> <label for=\"input-birthday\">Geburtstag</label> <input type=\"date\" placeholder=\"Geburtstag\" id=\"input-birthday\" name=\"birthday\"> </p> <fieldset> <legend>Priorit\u00e4t</legend> <p> <label for=\"input-priority-1\"> <input id=\"input-priority-1\" type=\"radio\" name=\"priority\" value=\"1\"> Hoch </label> </p> <p> <label for=\"input-priority-2\"> <input id=\"input-priority-2\" type=\"radio\" name=\"priority\" value=\"2\"> Mittel </label> </p> <p> <label for=\"input-priority-3\"> <input id=\"input-priority-3\" type=\"radio\" name=\"priority\" value=\"3\"> Niedrig </label> </p> </fieldset> <label> </form>","title":"Formulare"},{"location":"02_HTML/#strukturierung-eins-html-dokuments","text":"Im Beispiel wird ein typischer Aufbau einer Webseite skizziert. HTML stellt Elemente bereit, welche eine spezifische Bedeutung f\u00fcr den Inhalt implizieren. Diese Elemente sollen zur Strukturierung verwendet werden, sodass das HTML-Markup Bedeutung erh\u00e4lt. F\u00fcr Web-Crawler oder Assistenztechnologien (zB Braille-Browser, Screenreader) kann die Webseite somit auch interpretiert werden. Folgend sollen die wichtigsten Struktur-Elemente kurz beschrieben werden: <main> : Dieses Tag sollte nur einmal pro Webseite verwendet werden und soll als Wrapper f\u00fcr die wesentlichen Inhalte der Webseite fungieren. <article> : Schlie\u00dft einen zusammenh\u00e4ngenden Inhalt ein, welcher f\u00fcr sich stehen kann. <section> : Gruppierungselement um einen zusammenh\u00e4ngenden Teil einer Webseite zu gruppieren. <aside> : Nicht direkt mit dem <main> Inhalt verkn\u00fcpfte Inhalte. <nav> : Enth\u00e4lt die Hauptnavigation der Website. <header> : Stellt einleitenden Inhalt dar. <footer> : Stellt abschlie\u00dfenden Inhalt dar.","title":"Strukturierung eins HTML-Dokuments"},{"location":"02_HTML/#validitat-von-html","text":"Um eine korrekte Interpretation des HTML-Dokumentes zu gew\u00e4hrleisten, muss sichergestellt werden, dass keinerlei syntaktische Fehler im HTML-Markup vorherrschen. HTML-Validatoren k\u00f6nnen genutzt werden um ein HTML-Dokument automatisiert auf syntaktische Fehler zu pr\u00fcfen. Das W3C stellt einen standardkonformen HTML-Validator zur Verf\u00fcgung ( https://validator.w3.org ). Dieser Validator unterscheidet zwischen Fehlern (Error) und Warnungen (Warning): - Fehler sollten immer behoben werden, da dies ein konkretes syntaktisches Problem bezeichnet. - Warnung k\u00f6nnen behoben werden, diese sind vorranging f\u00fcr Barrierefreiheit und Suchmaschinen vorteilhaft.","title":"Validit\u00e4t von HTML"},{"location":"03_CSS/","text":"Cascading Stylesheets (CSS) CSS ist eine Stylesheet-Sprache um die Gestaltung bzw. Formatierung einer Webseite durchzuf\u00fchren. Jedes HTML-Element kann \u00fcber CSS-Eigenschaften wie zum Beispiel die Textfarbe, die Schriftgr\u00f6\u00dfe oder die H\u00f6he formatiert werden. CSS ist nicht nur auf Webseiten beschr\u00e4nkt sondern kann auch f\u00fcr die Formatierung von Druck bzw. die Sprachausgabe verwendet werden. CSS-Stylesheets organisieren sich als Ansammlung von CSS-Regeln. Eine CSS-Regel enth\u00e4lt eine Aufz\u00e4hlung von CSS-Eigenschaften und entsprechenden Werten. \u00dcber CSS-Selektoren werden CSS-Regeln mit HTML-Elementen verkn\u00fcpft. CSS-Regeln CSS-Regeln sind die grundlegenden syntaktischen Bausteine um einen CSS-Stylesheet zu definieren. Eine CSS-Regel wird \u00fcber einen Block von CSS-Eigenschaften und deren zu setzende Werte deklariert. Der Eigenschaftsblock wird \u00fcber die Klammern { und } eingeschlossen. Eine CSS-Eigenschaft wird von einem Bezeichner eingeleitet und \u00fcber : vom Wert getrennt. Eine CSS-Eigenschaft muss durch ; abgeschlossen werden. Die letze CSS-Eigenschaft innerhalb eines Blockes kann ohne ; abgeschlossen werden. Beispiel einer CSS-Regel (ohne CSS-Selektor): { background-color: red; color: blue } Um CSS-Regeln auf HTML-Elemente im DOM anzuwenden, werden CSS-Selektoren verwendet. CSS-Selektoren werden syntaktisch vor dem Eigenschaftsblock gesetzt. Somit kann der Eigenschaftsblock einer CSS-Regel auf selektierte HTML-Elemente angewendet werden. Beispiel einer vollst\u00e4ndigen CSS-Regel: a.my-class, #id123 { background-color: red; color: blue } CSS-Stylesheets einbinden Externer Stylesheet: Alle CSS-Regeln werden innerhalb einer eigenen Datei CSS-Datei beschrieben und \u00fcber das link-Tag im HTML-Head eingebunden Interner Stylesheet: Im HTML-Head k\u00f6nnen innerhalb eines style-Tags CSS-Regeln im HTML-Dokument angegeben werden Inline Angabe: Jedes HTML-Element im Dokument kann \u00fcber das style-Attribut direkt \u00fcber CSS-Eigenschaften formatiert werden Um eine klare Trennung zwischen Inhalt und Gestaltung herzustellen, sollten Stylesheets vorranging extern eingebunden werden. Interne Stylesheets machen Sinn um die Ladezeit zu optimieren, dies sollte aber m\u00f6glichst nicht manuell durchgef\u00fchrt werden. Inline Angaben sollten vermieden werden und nur f\u00fcr dynamische \u00c4nderungen \u00fcber JavaScript genutzt werden. CSS-Eigenschaften \u00dcber CSS-Eigenschaften kann das Aussehen und die Positionierung bzw. das Layout von HTML-Elementen bestimmt werden. Es gibt eine Vielzahl von unterschiedlichen CSS-Eigenschaften die jeglichen Aspekt des Aussehens bzw. auch des Verhaltens von HTML-Elementen bestimmen. CSS-Selektoren Mit CSS-Selektoren k\u00f6nnen HTML-Elemente im DOM eindeutig identifiziert werden. Somit kann der Eigenschaftsblock einer CSS-Regel auf selektierte HTML-Elemente angewendet werden. CSS-Selektoren werden auch in Zusammenhang mit JavaScript verwendet um HTML-Elemente zu selektieren und dynamisch zu ver\u00e4ndern. Es gibt unterschiedliche Formen von Selektoren: - Einfache Selektoren: Element-Selektor, Class-Selektor oder ID-Selektor - Attribut Selektor: Basierend auf einem oder mehreren HTML-Attributen - Pseudoklassen: HTML-Elemente k\u00f6nnen auf Basis eines bestimmten Zustands oder einer spezifischen Positionierung selektiert werden. - Pseudoelemente: Selektion eines Teiles eines HTML-Elementes. - Kombinatoren: Einzelne Selektoren k\u00f6nnen \u00fcber Kombinatoren verkn\u00fcpft werden. Einfache Selektoren Bezeichnung Syntax Beispiel Beschreibung ID-Selektor #sample-id HTML-Elemente k\u00f6nnen das Attribut id setzen, welches einen eindeutigen Wert f\u00fcr das gesamte HTML-Dokument haben muss. \u00dcber den ID-Selektor kann ein HTML-Element mit der entsprechenden ID selektiert werden. Class-Selektor .sample-class Es k\u00f6nnen beliebige Klassen definiert werden, welche in HTML-Elementen im Class-Attribut gesetzt werden. \u00dcber den Class-Selektor k\u00f6nnen alle HTML-Elemente selektiert werden, welche die entsprechende Klasse gesetzt haben. Element-Selektor div HTML-Elemente k\u00f6nnen \u00fcber den entsprechenden Bezeichner (Tagname) selektiert werden. Universal-Selektor * Als \"Joker\" kann der sog. Universal-Selektor verwendet werden, welcher alle HTML-Elemente selektiert. Attribut Selektoren Syntax Beispiel Beschreibung [attr] HTML-Elemente k\u00f6nnen Attribute setzen. Mit dem einfachen Attribut Selektor werden alle HTML Elemente ausgew\u00e4hlt, welche das Attribut gesetzt haben, egal mit welchem Wert. [attr=\u201evalue\u201c] Eine Erweiterung des einfachen Attribut Selektors wird durch die Angabe eines Wertes mit = durchgef\u00fchrt. Somit werden nur HTML-Elemente ausgew\u00e4hlt, welche ein Attribut mit genau dem entsprechenden Wert aufweisen. [attr~=\u201evalue\u201c] Alle HTML-Elemente in denen unter anderem der Attributwert value auftritt. [attr^=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert mit value startet. [attr$=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert mit value endet. [attr*=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert den Teilstring value enth\u00e4lt. Pseudoklassen Pseudoklassen werden mit einem f\u00fchrenden : angegeben. Es gibt eine Vielzahl von Pseudoklassen, im folgenden soll ein Auszug von h\u00e4ufig vorkommenden gegeben werden: Syntax Beispiel Beschreibung :hover Das HTML-Element \u00fcber dem der Mauszeiger liegt. :checked Checkbox, Radio-Button oder Selection-Option welche aktiviert ist. p:first Das erste Vorkommen eines p-Tag im HTML-Dokument p:first-child Das erste p-Tag welches ein Kindelementist. input:focus Ein input-Tag (zB Textfeld) auf dem der Fokus liegt. :empty Ein HTML-Element, welches keine Kindelemente hat. :not(p) Jesed HTML-Element, dass kein p-Tag ist. Pseudoelemente Pseudoelemente werden mit zwei f\u00fchrenden : angegeben. Syntax Beispiel Beschreibung ::after Kann genutzt werden um Inhalte nach einem HTML-Element \u00fcber CSS einzuf\u00fcgen. Der Inhalt sollte vorrangig stilistische Gr\u00fcnde haben. ::before \u00c4hnlich zu ::after f\u00fcgt ::before Inhlate vor einem HTML-Element ein. ::first-letter Selektiert den ersten Buchstaben innerhalb eines Textes. ::first-line Selektiert die erste Zeile eines Textes. ::selection Spezifiziert genau den Text, welcher selektiert wurde (zB mit der Maus). Kombinatoren Mit Kombinatoren k\u00f6nnen CSS-Selektoren verkn\u00fcpft werden. Im folgenden sind A und B Platzhalter f\u00fcr beliebige CSS-Selektoren: Bezeichnung Syntax Beispiel Beschreibung Nachkommenkombinator A B oder A >> B Alle Nachkommen von A , welche B entsprechen. Die Nachkommen m\u00fcssen nicht direkte Kinder sein sondern k\u00f6nnen auch Enkelkinder sein. Direkter Nachkommenkombinator A > B Alle direkte Nachkommen von A (nur Kinder). Geschwisterkombinator A ~ B Alle Geschwister von A (auf gleicher Ebene), welche B entsprechen Angrenzender Geschwisterkombinator A + B B ist direkt (auf gleicher Ebene) das n\u00e4chste Geschwister von A Gruppierung A, B A und B ist jeweils eine unabh\u00e4ngige Gruppe von CSS-Selektoren, welche innerhalb einer CSS-Regel auftreten. CSS Box-Modell Jedes HTML-Element wird im Web-Browser anhand des Box-Modell als eine rechteckige \"Box\" repr\u00e4sentiert. Das Box-Modell findet bei Block-Elementen vollst\u00e4ndige Anwendung und bei Inline-Elementen in eingeschr\u00e4nkter Form. Das Box-Modell definiert die 4 Bereiche Content , Padding , Border und Margin , welche in Kombination die Abmessungen eines HTML-Elements berechnen. Content Box : Der Inhaltsbereich wird definiert durch die CSS-Eigenschaften width und height . Padding Box : Padding ist der Innenabstand zwischen Inhalt und Rahmen (CSS-Eigenschaft padding ). Border Box : Der Rahmen liegt zwischen Innenabstand und Au\u00dfenabstand (CSS-Eigenschaften, welche mit dem Prefix border beginnen). Margin Box : Margin ist der Au\u00dfenabstand, welcher zwischen Rahmen und anderen HTML-Elementen in der Umgebung definiert ist (CSS-Eigenschaft: margin ). Kaskade Unterschiedliche CSS-Selektoren k\u00f6nnen das selbe HTML-Element bestimmen. Definierte CSS-Regeln k\u00f6nnen dadurch kollidieren und CSS-Eigenschaften k\u00f6nnen unterschiedlich definiert werden. Zum Beispiel k\u00f6nnte eine Regel die Schriftfarbe f\u00fcr \u00dcberschriften als blau definieren und eine andere Regel die Schriftfarbe als rot definieren. CSS definiert deshalb einen Kaskadierungs-Algorithmus um zu bestimmen, welche CSS-Selektoren und dadurch CSS-Regeln/CSS-Eigenschaften priorisiert werden. F\u00fcr CSS gelten folgende Faktoren um die Priorit\u00e4t von CSS-Eigenschaften festzulegen: - Wichtigkeit: F\u00fcr eine CSS-Eigenschaft kann durch Angabe des Schl\u00fcsselwortes !important die Priorit\u00e4t so gesetzt werden, dass alles andere \u00fcberschrieben wird. - Spezifit\u00e4t: Diese wird anhand eines numerischen Wertes gemesen. - Reihenfolge: Letztlich wird die Reihenfolge in der CSS-Stylesheet Definition herangezogen. Bei gleicher Spezifit\u00e4t wird die Definition, welche als letze definiert wurde, verwendet. Spezifit\u00e4tsberechnung von CSS-Selektoren CSS-Eigenschaften innerhalb von CSS-Regeln mit h\u00f6herer Spezifit\u00e4t \u00fcberschreiben CSS-Eigenschaften innerhalb von CSS-Regelen mit niederer Spezifit\u00e4t. Die Spezifit\u00e4t errechnet sich anhand numerischer Werte, welche f\u00fcr unterschiedliche CSS-Selektoren bzw. Angaben vergeben werden. Kombinatoren haben keinen Einfluss auf die Spezifit\u00e4t. Folgende Regeln werden verwendet um die Spezifit\u00e4t zu errechnen: Wert Beschreibung 1000 Falls eine CSS-Eigenschaft im style-Attribut des HTML-Elements angegeben wird. 100 F\u00fcr jeden ID-Selektor wird 100 vergeben. 10 F\u00fcr Class-, Attribut- oder Pseudoklassen Selektoren wird jeweils 10 vergeben. 1 F\u00fcr Element- bzw. Pseudoelement Selektoren wird jeweils 1 vergeben. Beispiele f\u00fcr Spezifit\u00e4tsberechnungen CSS-Selektor 1000 100 10 1 Summe h1 0 0 0 1 0001 p a::first-letter 0 0 0 3 0003 #exm p.class1 0 1 1 1 0111 .class1 > .class2 0 0 2 0 0020 Vererbung Das HTML-Dokument besteht aus einer Hierarchie von HTML-Elementen. Gewisse CSS-Eigenschaften werden vererbt. Das bedeutet, dass gewisse CSS-Eigenschaften, welche f\u00fcr ein Elternelement gesetzt werden an allen Kinder und Enkelkinder auch gesetzt werden. Beispiele f\u00fcr CSS-Eigenschaften welche vererbt werden sind: color , font-family , font-weight , text-align . Beispiele f\u00fcr CSS-Eigenschaften welche nicht vererbt werden sind: margin , padding , width , height , position . Die genauen Vererbungsregeln von einzelnen CSS-Eigenschaften werden im W3C-Standard definiert. F\u00fcr das t\u00e4gliche Arbeiten mit CSS entsteht schnell eine Intuition daf\u00fcr, welche CSS-Eigenschaften vererben und welche nicht. Im folgenden Beispiel soll das Konzept der Vererbung demonstriert werden. Dabei ist eine kleiner HTML Ausschnitt definiert. Auf dem HTML-Element section wird ein Padding von 15px bzw. eine Schriftfarbe red definiert. Das Padding wird dabei nur auf section angewandt, die Schriftfarbe jedoch auch auf h1 , p und strong . Padding ist eine CSS-Eigenschaft, welche nicht vererbt wird, die Schriftfarbe ist jedoch eine CSS-Eigenschaft, welche vererbt wird. Durch die explizite Angabe der Schriftfarbe blue auf strong wird red \u00fcberschrieben. Beispiel HTML: <section> <h1>Eine \u00dcberschrift</h1> <p>Ein <strong>Beispieltext</strong> innerhalb eines Paragraphen</p> </section> Beispiel CSS: section { padding:15px; color: red; } strong { color: blue; }","title":"03 CSS"},{"location":"03_CSS/#cascading-stylesheets-css","text":"CSS ist eine Stylesheet-Sprache um die Gestaltung bzw. Formatierung einer Webseite durchzuf\u00fchren. Jedes HTML-Element kann \u00fcber CSS-Eigenschaften wie zum Beispiel die Textfarbe, die Schriftgr\u00f6\u00dfe oder die H\u00f6he formatiert werden. CSS ist nicht nur auf Webseiten beschr\u00e4nkt sondern kann auch f\u00fcr die Formatierung von Druck bzw. die Sprachausgabe verwendet werden. CSS-Stylesheets organisieren sich als Ansammlung von CSS-Regeln. Eine CSS-Regel enth\u00e4lt eine Aufz\u00e4hlung von CSS-Eigenschaften und entsprechenden Werten. \u00dcber CSS-Selektoren werden CSS-Regeln mit HTML-Elementen verkn\u00fcpft.","title":"Cascading Stylesheets (CSS)"},{"location":"03_CSS/#css-regeln","text":"CSS-Regeln sind die grundlegenden syntaktischen Bausteine um einen CSS-Stylesheet zu definieren. Eine CSS-Regel wird \u00fcber einen Block von CSS-Eigenschaften und deren zu setzende Werte deklariert. Der Eigenschaftsblock wird \u00fcber die Klammern { und } eingeschlossen. Eine CSS-Eigenschaft wird von einem Bezeichner eingeleitet und \u00fcber : vom Wert getrennt. Eine CSS-Eigenschaft muss durch ; abgeschlossen werden. Die letze CSS-Eigenschaft innerhalb eines Blockes kann ohne ; abgeschlossen werden. Beispiel einer CSS-Regel (ohne CSS-Selektor): { background-color: red; color: blue } Um CSS-Regeln auf HTML-Elemente im DOM anzuwenden, werden CSS-Selektoren verwendet. CSS-Selektoren werden syntaktisch vor dem Eigenschaftsblock gesetzt. Somit kann der Eigenschaftsblock einer CSS-Regel auf selektierte HTML-Elemente angewendet werden. Beispiel einer vollst\u00e4ndigen CSS-Regel: a.my-class, #id123 { background-color: red; color: blue }","title":"CSS-Regeln"},{"location":"03_CSS/#css-stylesheets-einbinden","text":"Externer Stylesheet: Alle CSS-Regeln werden innerhalb einer eigenen Datei CSS-Datei beschrieben und \u00fcber das link-Tag im HTML-Head eingebunden Interner Stylesheet: Im HTML-Head k\u00f6nnen innerhalb eines style-Tags CSS-Regeln im HTML-Dokument angegeben werden Inline Angabe: Jedes HTML-Element im Dokument kann \u00fcber das style-Attribut direkt \u00fcber CSS-Eigenschaften formatiert werden Um eine klare Trennung zwischen Inhalt und Gestaltung herzustellen, sollten Stylesheets vorranging extern eingebunden werden. Interne Stylesheets machen Sinn um die Ladezeit zu optimieren, dies sollte aber m\u00f6glichst nicht manuell durchgef\u00fchrt werden. Inline Angaben sollten vermieden werden und nur f\u00fcr dynamische \u00c4nderungen \u00fcber JavaScript genutzt werden.","title":"CSS-Stylesheets einbinden"},{"location":"03_CSS/#css-eigenschaften","text":"\u00dcber CSS-Eigenschaften kann das Aussehen und die Positionierung bzw. das Layout von HTML-Elementen bestimmt werden. Es gibt eine Vielzahl von unterschiedlichen CSS-Eigenschaften die jeglichen Aspekt des Aussehens bzw. auch des Verhaltens von HTML-Elementen bestimmen.","title":"CSS-Eigenschaften"},{"location":"03_CSS/#css-selektoren","text":"Mit CSS-Selektoren k\u00f6nnen HTML-Elemente im DOM eindeutig identifiziert werden. Somit kann der Eigenschaftsblock einer CSS-Regel auf selektierte HTML-Elemente angewendet werden. CSS-Selektoren werden auch in Zusammenhang mit JavaScript verwendet um HTML-Elemente zu selektieren und dynamisch zu ver\u00e4ndern. Es gibt unterschiedliche Formen von Selektoren: - Einfache Selektoren: Element-Selektor, Class-Selektor oder ID-Selektor - Attribut Selektor: Basierend auf einem oder mehreren HTML-Attributen - Pseudoklassen: HTML-Elemente k\u00f6nnen auf Basis eines bestimmten Zustands oder einer spezifischen Positionierung selektiert werden. - Pseudoelemente: Selektion eines Teiles eines HTML-Elementes. - Kombinatoren: Einzelne Selektoren k\u00f6nnen \u00fcber Kombinatoren verkn\u00fcpft werden.","title":"CSS-Selektoren"},{"location":"03_CSS/#einfache-selektoren","text":"Bezeichnung Syntax Beispiel Beschreibung ID-Selektor #sample-id HTML-Elemente k\u00f6nnen das Attribut id setzen, welches einen eindeutigen Wert f\u00fcr das gesamte HTML-Dokument haben muss. \u00dcber den ID-Selektor kann ein HTML-Element mit der entsprechenden ID selektiert werden. Class-Selektor .sample-class Es k\u00f6nnen beliebige Klassen definiert werden, welche in HTML-Elementen im Class-Attribut gesetzt werden. \u00dcber den Class-Selektor k\u00f6nnen alle HTML-Elemente selektiert werden, welche die entsprechende Klasse gesetzt haben. Element-Selektor div HTML-Elemente k\u00f6nnen \u00fcber den entsprechenden Bezeichner (Tagname) selektiert werden. Universal-Selektor * Als \"Joker\" kann der sog. Universal-Selektor verwendet werden, welcher alle HTML-Elemente selektiert.","title":"Einfache Selektoren"},{"location":"03_CSS/#attribut-selektoren","text":"Syntax Beispiel Beschreibung [attr] HTML-Elemente k\u00f6nnen Attribute setzen. Mit dem einfachen Attribut Selektor werden alle HTML Elemente ausgew\u00e4hlt, welche das Attribut gesetzt haben, egal mit welchem Wert. [attr=\u201evalue\u201c] Eine Erweiterung des einfachen Attribut Selektors wird durch die Angabe eines Wertes mit = durchgef\u00fchrt. Somit werden nur HTML-Elemente ausgew\u00e4hlt, welche ein Attribut mit genau dem entsprechenden Wert aufweisen. [attr~=\u201evalue\u201c] Alle HTML-Elemente in denen unter anderem der Attributwert value auftritt. [attr^=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert mit value startet. [attr$=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert mit value endet. [attr*=\u201evalue\u201c] Alle HTML-Elemente in denen der Arttributwert den Teilstring value enth\u00e4lt.","title":"Attribut Selektoren"},{"location":"03_CSS/#pseudoklassen","text":"Pseudoklassen werden mit einem f\u00fchrenden : angegeben. Es gibt eine Vielzahl von Pseudoklassen, im folgenden soll ein Auszug von h\u00e4ufig vorkommenden gegeben werden: Syntax Beispiel Beschreibung :hover Das HTML-Element \u00fcber dem der Mauszeiger liegt. :checked Checkbox, Radio-Button oder Selection-Option welche aktiviert ist. p:first Das erste Vorkommen eines p-Tag im HTML-Dokument p:first-child Das erste p-Tag welches ein Kindelementist. input:focus Ein input-Tag (zB Textfeld) auf dem der Fokus liegt. :empty Ein HTML-Element, welches keine Kindelemente hat. :not(p) Jesed HTML-Element, dass kein p-Tag ist.","title":"Pseudoklassen"},{"location":"03_CSS/#pseudoelemente","text":"Pseudoelemente werden mit zwei f\u00fchrenden : angegeben. Syntax Beispiel Beschreibung ::after Kann genutzt werden um Inhalte nach einem HTML-Element \u00fcber CSS einzuf\u00fcgen. Der Inhalt sollte vorrangig stilistische Gr\u00fcnde haben. ::before \u00c4hnlich zu ::after f\u00fcgt ::before Inhlate vor einem HTML-Element ein. ::first-letter Selektiert den ersten Buchstaben innerhalb eines Textes. ::first-line Selektiert die erste Zeile eines Textes. ::selection Spezifiziert genau den Text, welcher selektiert wurde (zB mit der Maus).","title":"Pseudoelemente"},{"location":"03_CSS/#kombinatoren","text":"Mit Kombinatoren k\u00f6nnen CSS-Selektoren verkn\u00fcpft werden. Im folgenden sind A und B Platzhalter f\u00fcr beliebige CSS-Selektoren: Bezeichnung Syntax Beispiel Beschreibung Nachkommenkombinator A B oder A >> B Alle Nachkommen von A , welche B entsprechen. Die Nachkommen m\u00fcssen nicht direkte Kinder sein sondern k\u00f6nnen auch Enkelkinder sein. Direkter Nachkommenkombinator A > B Alle direkte Nachkommen von A (nur Kinder). Geschwisterkombinator A ~ B Alle Geschwister von A (auf gleicher Ebene), welche B entsprechen Angrenzender Geschwisterkombinator A + B B ist direkt (auf gleicher Ebene) das n\u00e4chste Geschwister von A Gruppierung A, B A und B ist jeweils eine unabh\u00e4ngige Gruppe von CSS-Selektoren, welche innerhalb einer CSS-Regel auftreten.","title":"Kombinatoren"},{"location":"03_CSS/#css-box-modell","text":"Jedes HTML-Element wird im Web-Browser anhand des Box-Modell als eine rechteckige \"Box\" repr\u00e4sentiert. Das Box-Modell findet bei Block-Elementen vollst\u00e4ndige Anwendung und bei Inline-Elementen in eingeschr\u00e4nkter Form. Das Box-Modell definiert die 4 Bereiche Content , Padding , Border und Margin , welche in Kombination die Abmessungen eines HTML-Elements berechnen. Content Box : Der Inhaltsbereich wird definiert durch die CSS-Eigenschaften width und height . Padding Box : Padding ist der Innenabstand zwischen Inhalt und Rahmen (CSS-Eigenschaft padding ). Border Box : Der Rahmen liegt zwischen Innenabstand und Au\u00dfenabstand (CSS-Eigenschaften, welche mit dem Prefix border beginnen). Margin Box : Margin ist der Au\u00dfenabstand, welcher zwischen Rahmen und anderen HTML-Elementen in der Umgebung definiert ist (CSS-Eigenschaft: margin ).","title":"CSS Box-Modell"},{"location":"03_CSS/#kaskade","text":"Unterschiedliche CSS-Selektoren k\u00f6nnen das selbe HTML-Element bestimmen. Definierte CSS-Regeln k\u00f6nnen dadurch kollidieren und CSS-Eigenschaften k\u00f6nnen unterschiedlich definiert werden. Zum Beispiel k\u00f6nnte eine Regel die Schriftfarbe f\u00fcr \u00dcberschriften als blau definieren und eine andere Regel die Schriftfarbe als rot definieren. CSS definiert deshalb einen Kaskadierungs-Algorithmus um zu bestimmen, welche CSS-Selektoren und dadurch CSS-Regeln/CSS-Eigenschaften priorisiert werden. F\u00fcr CSS gelten folgende Faktoren um die Priorit\u00e4t von CSS-Eigenschaften festzulegen: - Wichtigkeit: F\u00fcr eine CSS-Eigenschaft kann durch Angabe des Schl\u00fcsselwortes !important die Priorit\u00e4t so gesetzt werden, dass alles andere \u00fcberschrieben wird. - Spezifit\u00e4t: Diese wird anhand eines numerischen Wertes gemesen. - Reihenfolge: Letztlich wird die Reihenfolge in der CSS-Stylesheet Definition herangezogen. Bei gleicher Spezifit\u00e4t wird die Definition, welche als letze definiert wurde, verwendet.","title":"Kaskade"},{"location":"03_CSS/#spezifitatsberechnung-von-css-selektoren","text":"CSS-Eigenschaften innerhalb von CSS-Regeln mit h\u00f6herer Spezifit\u00e4t \u00fcberschreiben CSS-Eigenschaften innerhalb von CSS-Regelen mit niederer Spezifit\u00e4t. Die Spezifit\u00e4t errechnet sich anhand numerischer Werte, welche f\u00fcr unterschiedliche CSS-Selektoren bzw. Angaben vergeben werden. Kombinatoren haben keinen Einfluss auf die Spezifit\u00e4t. Folgende Regeln werden verwendet um die Spezifit\u00e4t zu errechnen: Wert Beschreibung 1000 Falls eine CSS-Eigenschaft im style-Attribut des HTML-Elements angegeben wird. 100 F\u00fcr jeden ID-Selektor wird 100 vergeben. 10 F\u00fcr Class-, Attribut- oder Pseudoklassen Selektoren wird jeweils 10 vergeben. 1 F\u00fcr Element- bzw. Pseudoelement Selektoren wird jeweils 1 vergeben.","title":"Spezifit\u00e4tsberechnung von CSS-Selektoren"},{"location":"03_CSS/#beispiele-fur-spezifitatsberechnungen","text":"CSS-Selektor 1000 100 10 1 Summe h1 0 0 0 1 0001 p a::first-letter 0 0 0 3 0003 #exm p.class1 0 1 1 1 0111 .class1 > .class2 0 0 2 0 0020","title":"Beispiele f\u00fcr Spezifit\u00e4tsberechnungen"},{"location":"03_CSS/#vererbung","text":"Das HTML-Dokument besteht aus einer Hierarchie von HTML-Elementen. Gewisse CSS-Eigenschaften werden vererbt. Das bedeutet, dass gewisse CSS-Eigenschaften, welche f\u00fcr ein Elternelement gesetzt werden an allen Kinder und Enkelkinder auch gesetzt werden. Beispiele f\u00fcr CSS-Eigenschaften welche vererbt werden sind: color , font-family , font-weight , text-align . Beispiele f\u00fcr CSS-Eigenschaften welche nicht vererbt werden sind: margin , padding , width , height , position . Die genauen Vererbungsregeln von einzelnen CSS-Eigenschaften werden im W3C-Standard definiert. F\u00fcr das t\u00e4gliche Arbeiten mit CSS entsteht schnell eine Intuition daf\u00fcr, welche CSS-Eigenschaften vererben und welche nicht. Im folgenden Beispiel soll das Konzept der Vererbung demonstriert werden. Dabei ist eine kleiner HTML Ausschnitt definiert. Auf dem HTML-Element section wird ein Padding von 15px bzw. eine Schriftfarbe red definiert. Das Padding wird dabei nur auf section angewandt, die Schriftfarbe jedoch auch auf h1 , p und strong . Padding ist eine CSS-Eigenschaft, welche nicht vererbt wird, die Schriftfarbe ist jedoch eine CSS-Eigenschaft, welche vererbt wird. Durch die explizite Angabe der Schriftfarbe blue auf strong wird red \u00fcberschrieben. Beispiel HTML: <section> <h1>Eine \u00dcberschrift</h1> <p>Ein <strong>Beispieltext</strong> innerhalb eines Paragraphen</p> </section> Beispiel CSS: section { padding:15px; color: red; } strong { color: blue; }","title":"Vererbung"},{"location":"04_Grafik/","text":"Grafik im WWW Farbmodelle (Farbr\u00e4ume) Farbmodelle sind Beschreibungssysteme um unterschiedliche Farben \u00fcber Koordinaten zu definieren. Farbmodelle nutzen meist ein dreidimensionales Koordinatensystem (Farbraum) zur Beschreibung. Wichtige Farbmodelle f\u00fcr Grafiken im WWW sind RGB und HSL . RGB Farbraum Der RGB Farbraum definiert Farben \u00fcber die Mischung von den Farbkan\u00e4len Rot, Gr\u00fcn und Blau. Jeder dieser 3 Farbkan\u00e4le kann dabei einen unterschiedlichen Intensit\u00e4tswert aufweisen. \u00dcber die Farbtiefe wird bestimmt wieviele unterschiedliche Intensit\u00e4tswerte ein Farbkanal aufweisen kann. Letztlich wird damit definiert wieviel unterschieldiche Farben dargestellt werden k\u00f6nnen. G\u00e4ngig ist eine Farbtiefe von 24 Bit, welche f\u00fcr jeden Farbkanal 8 Bit bereitstellt (0-255 je Farbkanal). Mit einer dieser Farbtiefe k\u00f6nnen 16.777.216 Farben dargestellt werden. Als g\u00e4ngige und kompakte Darstellung eines Farbwertes im RGB Farbraum wird das Hexadezimalsystem verwendet. Navigation im RGB Farbraum Rastergrafiken Vektorgrafiken Grafikformate","title":"04 Grafik im WWW"},{"location":"04_Grafik/#grafik-im-www","text":"","title":"Grafik im WWW"},{"location":"04_Grafik/#farbmodelle-farbraume","text":"Farbmodelle sind Beschreibungssysteme um unterschiedliche Farben \u00fcber Koordinaten zu definieren. Farbmodelle nutzen meist ein dreidimensionales Koordinatensystem (Farbraum) zur Beschreibung. Wichtige Farbmodelle f\u00fcr Grafiken im WWW sind RGB und HSL .","title":"Farbmodelle (Farbr\u00e4ume)"},{"location":"04_Grafik/#rgb-farbraum","text":"Der RGB Farbraum definiert Farben \u00fcber die Mischung von den Farbkan\u00e4len Rot, Gr\u00fcn und Blau. Jeder dieser 3 Farbkan\u00e4le kann dabei einen unterschiedlichen Intensit\u00e4tswert aufweisen. \u00dcber die Farbtiefe wird bestimmt wieviele unterschiedliche Intensit\u00e4tswerte ein Farbkanal aufweisen kann. Letztlich wird damit definiert wieviel unterschieldiche Farben dargestellt werden k\u00f6nnen. G\u00e4ngig ist eine Farbtiefe von 24 Bit, welche f\u00fcr jeden Farbkanal 8 Bit bereitstellt (0-255 je Farbkanal). Mit einer dieser Farbtiefe k\u00f6nnen 16.777.216 Farben dargestellt werden. Als g\u00e4ngige und kompakte Darstellung eines Farbwertes im RGB Farbraum wird das Hexadezimalsystem verwendet.","title":"RGB Farbraum"},{"location":"04_Grafik/#navigation-im-rgb-farbraum","text":"","title":"Navigation im RGB Farbraum"},{"location":"04_Grafik/#rastergrafiken","text":"","title":"Rastergrafiken"},{"location":"04_Grafik/#vektorgrafiken","text":"","title":"Vektorgrafiken"},{"location":"04_Grafik/#grafikformate","text":"","title":"Grafikformate"},{"location":"05_CSS_Layouts/","text":"Layouts und Positionierung Das Default-Layout in HTML ist das sog. \"Flow-Layout\". Dabei werden HTML-Elemente anhand ihrer display-Eigenschaft als block oder inline ausgerichtet. Moderne Webseiten haben komplexe Layouts, welche \u00fcber das Flow Layout alleine nicht realisierbar w\u00e4ren. Positionierung Mit den CSS-Eigenschaften left , top , right und bottom k\u00f6nnen HTML-Elemente individuell positioniert werden. Zur Festlegung des Koordinaten-Ursprungs (0,0) k\u00f6nnen verschieden Angaben zur CSS-Eigenschaft position get\u00e4tigt werden. Die folgenden Positionsangaben sind definiert: static : Dies ist default und positioniert das HTML-Element entlag des normalen Flusses (Flow-Layout). Die CSS-Eigenschaften left , top , right , bottom und z-index haben keine Auswirkung. relative : Das HTML-Element wird aus dem normalen Fluss entfernt und kann einen relativen Abstand zur eigentlichen (durch das Flow-Layout festgeleten) Position festlegen. Die Position kann dabei \u00fcber die CSS-Eigenschaften left , top , etc festgelegt werden. Die eigentliche Position des HTML-Elements bleibt dabei leer . Die relative Positionierung hat keinen Einfluss auf andere HTML-Elemente. absolute : Das HTML-Element wird aus dem normalen Fluss entfert und kann einen absoluten Abstand zum Ursprung festlegen. Der Ursprung wird dabei durch die linke obere Ecke des Elternelements in der Hierarchie nach oben festgelegt, dass keine static Positionierung hat. Als letzte Instanz w\u00fcrde der Wurzelknoten html fungieren. fixed : \u00c4hnlich zur absolute-Positionierung jedoch bleibt das HTML-Element auch bei Scrolling an der festgelegten Position stehen. Beispiel zur relativen Positionierung Durch die relative Positionierung wird die festgelegte Position durch das Flow-Layout als Koordinaten-Ursprung festgelegt. Die Positionsangaben left , right , top und bottom bezeihen sich dabei relativ zu Koordinaten-Ursprung. Der Ausgangspunkt f\u00fcr das Beispiel sind 4 quadratische HTML-Elemente, welche im normalen Fluss positioniert sind: Im Beispiel wird das zugeh\u00f6rige HTML gezeigt: <section> <div class=\"element\"></div> <div class=\"element position-element\"></div> <div class=\"element\"></div> <div class=\"element\"></div> </section> Im Beispiel wird das zugeh\u00f6rige CSS gezeigt: .element { margin:10px; width:80px; height:80px; display:inline-block; background:blue; } Durch eine relative Positionsangabe soll das zweite Quadrat (rot) 50px von links und 20px von unten verschoben werden: Die entsprechende CSS \u00c4nderung sieht dazu folgenderma\u00dfen aus: .position-element { position:relative; background:red; left:50px; bottom:20px; } Im Beispiel wird ersichtlich, dass der vom Flow-Layout vorgegebene Platz f\u00fcr das zweite Quadrat frei bleibt. Beispiel zur absoluten Positionierung Durch die absolute Positionierung wird die festgelegte Position des Flow-Layout freigegeben. Die Positionsangaben left , right , top und bottom bezeihen sich dabei auf die nach oben n\u00e4chsten relative oder fixed positioniertem HTML-Element in der Hierarchie. Der Ausgangspunkt f\u00fcr das Beispiel sind 4 quadratische HTML-Elemente, welche im normalen Fluss positioniert sind: Im Beispiel wird das zugeh\u00f6rige HTML gezeigt: <section> <div class=\"element\"></div> <div class=\"element position-element\"></div> <div class=\"element\"></div> <div class=\"element\"></div> </section> Im Beispiel wird das zugeh\u00f6rige CSS gezeigt. Die section wird mit einer relativen Position gesetzt, sodass sie als Koordinaten-Ursprung f\u00fcr das absolut Positionierte HTML-Element dient: section { position:relative; } .element { margin:10px; width:80px; height:80px; display:inline-block; background:blue; } Durch eine absolute Positionsangabe soll das zweite Quadrat (rot) -25px von rechts und -25px von oben verschoben werden. Die Referenz f\u00fcr die Positionsangaben ist dabei das umgebende section-Element : Die entsprechende CSS \u00c4nderung sieht dazu folgenderma\u00dfen aus: .position-element { position:absolute; background:red; right:-25px; top:-25px; } Im Beispiel wird ersichtlich, dass der vom Flow-Layout vorgegebene Platz f\u00fcr das zweite Quadrat freigegeben und aufgef\u00fcllt wird. Beispiel f\u00fcr z-index \u00c4nderungen HTML-Elemente des normalen Flussen haben den z-index mit 0 gesetzt. Beim relativ Positionierten HTML-Element kann der z-index ver\u00e4ndert werden. Grid-Layout Flexbox-Layout Tabellen Tabellen werden ausschlie\u00dflich zur Darstellung von tabellarischen Daten genutzt. Zur Darstellung der Tabelleninhalte gibt es 2 Layoutvarianten (CSS-Eigenschaft table-layout ), welche die Tabellenbreite bzw. die Spaltenbreite berechnen: auto : Die Tabellenbreite bzw. auch die Spaltenbreite passt sich am Inhalt an und ist je Spalte unterschiedlich. Dies ist die Default-Einstellung. Das Result ist dabei \"unvorhersehbar\". fixed : Die Spaltenbreite wird \u00fcber eine einfache Formel berechnet Spaltenbreite = Tabellenbreit / Anzahl Spalten . Wichtig dabei ist f\u00fcr die Tabelle die Breite width:100%; anzugeben, sodass der ganze verf\u00fcgbare Platz ausgenutzt ist. Beispiel f\u00fcr das Tabellenlayout auto : Beispiel f\u00fcr das Tabellenlayout fixed :","title":"05 Layouts und Positionierung"},{"location":"05_CSS_Layouts/#layouts-und-positionierung","text":"Das Default-Layout in HTML ist das sog. \"Flow-Layout\". Dabei werden HTML-Elemente anhand ihrer display-Eigenschaft als block oder inline ausgerichtet. Moderne Webseiten haben komplexe Layouts, welche \u00fcber das Flow Layout alleine nicht realisierbar w\u00e4ren.","title":"Layouts und Positionierung"},{"location":"05_CSS_Layouts/#positionierung","text":"Mit den CSS-Eigenschaften left , top , right und bottom k\u00f6nnen HTML-Elemente individuell positioniert werden. Zur Festlegung des Koordinaten-Ursprungs (0,0) k\u00f6nnen verschieden Angaben zur CSS-Eigenschaft position get\u00e4tigt werden. Die folgenden Positionsangaben sind definiert: static : Dies ist default und positioniert das HTML-Element entlag des normalen Flusses (Flow-Layout). Die CSS-Eigenschaften left , top , right , bottom und z-index haben keine Auswirkung. relative : Das HTML-Element wird aus dem normalen Fluss entfernt und kann einen relativen Abstand zur eigentlichen (durch das Flow-Layout festgeleten) Position festlegen. Die Position kann dabei \u00fcber die CSS-Eigenschaften left , top , etc festgelegt werden. Die eigentliche Position des HTML-Elements bleibt dabei leer . Die relative Positionierung hat keinen Einfluss auf andere HTML-Elemente. absolute : Das HTML-Element wird aus dem normalen Fluss entfert und kann einen absoluten Abstand zum Ursprung festlegen. Der Ursprung wird dabei durch die linke obere Ecke des Elternelements in der Hierarchie nach oben festgelegt, dass keine static Positionierung hat. Als letzte Instanz w\u00fcrde der Wurzelknoten html fungieren. fixed : \u00c4hnlich zur absolute-Positionierung jedoch bleibt das HTML-Element auch bei Scrolling an der festgelegten Position stehen.","title":"Positionierung"},{"location":"05_CSS_Layouts/#beispiel-zur-relativen-positionierung","text":"Durch die relative Positionierung wird die festgelegte Position durch das Flow-Layout als Koordinaten-Ursprung festgelegt. Die Positionsangaben left , right , top und bottom bezeihen sich dabei relativ zu Koordinaten-Ursprung. Der Ausgangspunkt f\u00fcr das Beispiel sind 4 quadratische HTML-Elemente, welche im normalen Fluss positioniert sind: Im Beispiel wird das zugeh\u00f6rige HTML gezeigt: <section> <div class=\"element\"></div> <div class=\"element position-element\"></div> <div class=\"element\"></div> <div class=\"element\"></div> </section> Im Beispiel wird das zugeh\u00f6rige CSS gezeigt: .element { margin:10px; width:80px; height:80px; display:inline-block; background:blue; } Durch eine relative Positionsangabe soll das zweite Quadrat (rot) 50px von links und 20px von unten verschoben werden: Die entsprechende CSS \u00c4nderung sieht dazu folgenderma\u00dfen aus: .position-element { position:relative; background:red; left:50px; bottom:20px; } Im Beispiel wird ersichtlich, dass der vom Flow-Layout vorgegebene Platz f\u00fcr das zweite Quadrat frei bleibt.","title":"Beispiel zur relativen Positionierung"},{"location":"05_CSS_Layouts/#beispiel-zur-absoluten-positionierung","text":"Durch die absolute Positionierung wird die festgelegte Position des Flow-Layout freigegeben. Die Positionsangaben left , right , top und bottom bezeihen sich dabei auf die nach oben n\u00e4chsten relative oder fixed positioniertem HTML-Element in der Hierarchie. Der Ausgangspunkt f\u00fcr das Beispiel sind 4 quadratische HTML-Elemente, welche im normalen Fluss positioniert sind: Im Beispiel wird das zugeh\u00f6rige HTML gezeigt: <section> <div class=\"element\"></div> <div class=\"element position-element\"></div> <div class=\"element\"></div> <div class=\"element\"></div> </section> Im Beispiel wird das zugeh\u00f6rige CSS gezeigt. Die section wird mit einer relativen Position gesetzt, sodass sie als Koordinaten-Ursprung f\u00fcr das absolut Positionierte HTML-Element dient: section { position:relative; } .element { margin:10px; width:80px; height:80px; display:inline-block; background:blue; } Durch eine absolute Positionsangabe soll das zweite Quadrat (rot) -25px von rechts und -25px von oben verschoben werden. Die Referenz f\u00fcr die Positionsangaben ist dabei das umgebende section-Element : Die entsprechende CSS \u00c4nderung sieht dazu folgenderma\u00dfen aus: .position-element { position:absolute; background:red; right:-25px; top:-25px; } Im Beispiel wird ersichtlich, dass der vom Flow-Layout vorgegebene Platz f\u00fcr das zweite Quadrat freigegeben und aufgef\u00fcllt wird.","title":"Beispiel zur absoluten Positionierung"},{"location":"05_CSS_Layouts/#beispiel-fur-z-index-anderungen","text":"HTML-Elemente des normalen Flussen haben den z-index mit 0 gesetzt. Beim relativ Positionierten HTML-Element kann der z-index ver\u00e4ndert werden.","title":"Beispiel f\u00fcr z-index \u00c4nderungen"},{"location":"05_CSS_Layouts/#grid-layout","text":"","title":"Grid-Layout"},{"location":"05_CSS_Layouts/#flexbox-layout","text":"","title":"Flexbox-Layout"},{"location":"05_CSS_Layouts/#tabellen","text":"Tabellen werden ausschlie\u00dflich zur Darstellung von tabellarischen Daten genutzt. Zur Darstellung der Tabelleninhalte gibt es 2 Layoutvarianten (CSS-Eigenschaft table-layout ), welche die Tabellenbreite bzw. die Spaltenbreite berechnen: auto : Die Tabellenbreite bzw. auch die Spaltenbreite passt sich am Inhalt an und ist je Spalte unterschiedlich. Dies ist die Default-Einstellung. Das Result ist dabei \"unvorhersehbar\". fixed : Die Spaltenbreite wird \u00fcber eine einfache Formel berechnet Spaltenbreite = Tabellenbreit / Anzahl Spalten . Wichtig dabei ist f\u00fcr die Tabelle die Breite width:100%; anzugeben, sodass der ganze verf\u00fcgbare Platz ausgenutzt ist. Beispiel f\u00fcr das Tabellenlayout auto : Beispiel f\u00fcr das Tabellenlayout fixed :","title":"Tabellen"},{"location":"05_Responsive_Web/","text":"Responsive Web Das WWW kann grunds\u00e4tzlich \u00fcber unterschiedliche Ger\u00e4te betrachtet und bedient werden. Nahezu f\u00fcr jedes Ger\u00e4t gibt es einen Web-Browser. Responsive Web Design (RWD) ist ein Ansatz um Webseiten so zu gestalten, dass sich ihr Layout bzw. die allgemeine Gestaltung und Bedienung auf die verf\u00fcgbaren M\u00f6glichkeiten (zB Bildschirmgr\u00f6\u00dfe) des entsprechenden Ger\u00e4tes anpasst. Viewport Mit den ersten Smartphones (unter anderem iPhone 1) wurde ersichtlich, dass die Erstellung von Webseiten mit fixen Breiten ein Problem darstellt. Am Smartphone konnte nur ein kleiner Ausschnitt einer Webseite angezeigt werden. Als L\u00f6sung wurde ein sog. Viewport definiert. Ein Viewport stellt eine \"virtuelle\" Zeichenfl\u00e4che dar, welche eine dedizierte Breite und H\u00f6he aufweist (von Web-Browsern unterschiedliche festgelegt zB mit Breite 980px). Die Webseite wird auf die virtuelle Zeichenfl\u00e4che geladen und diese Zeichenfl\u00e4che wird dann angepasst und auf das tats\u00e4chliche Display projiziert. Im folgenden Bild wird gezeigt wie sich das Problem der \"fixen Breite\" einer Webseite darstellt: Im folgenden Bild wird gezeigt wie das Problem der \"fixen Breite\" einer Webseite durch die Einf\u00fchrung des Viewport gel\u00f6st wurde: Die beschriebene Viewport-Projektion ist bei Smartphone und Tablet Browsern aktiviert. Bei speziell angepassten mobilen Webseiten f\u00fcrht dies jedoch zum Problem, dass die Default-Viewport-Gr\u00f6\u00dfe zu gro\u00df ist und der rechte Bereit wei\u00df bleibt. Deshalb kann mit dem speziellen viewport-Metatag eine Anpassung der Viewport-Gr\u00f6\u00dfe durchgef\u00fchrt werden. <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> F\u00fcr das viewport-Metatag k\u00f6nnen unter anderem folgende Parameter spezifiziert werden: width , initial-scale , minimum-scale oder maximum-scale . Im folgenden Bild wird gezeigt wie sich die Anpassung der Viewport Gr\u00f6\u00dfe auf die Darstellung am Smartphone auswirkt: Beispiele von Pixel bzw. Viewport Gr\u00f6\u00dfen popul\u00e4rer Ger\u00e4te: Bezeichnung Pixel Viewport iPhone XR 828x1792 414x896 iPhone 8 750x1334 375x667 iPhone 7 750x1334 375x667 iPad Air 1 & 2 1536x2048 768x1024 Google Pixel 3 1080x2160 412x824 Samsung Galaxy S9 1440x2960 360x740 Nexus 9 1536x2048 768x1024 Mediatypes Mit Mediatypes werden unterschiedliche Ausgabeger\u00e4te definiert. Durch Angabe eines Mediatypes bei der Definition eines Stylesheets k\u00f6nnen diese medienspezifisch geladen werden. Die Mediatypes all , print , screen und speech sind definiert. Der Mediatype all ist dabei als Defaultwert zu verstehen. Im folgenden Beispiel wird gezeigt wie ein Stylesheet eingebunden werden kann, welcher nur f\u00fcr Mediatype print geladen werden soll: <link rel=\"stylesheet\" type=\"text/css\" href=\"beispiel.css\" media=\"print\"> Mediaqueries Innerhalb von CSS-Stylescheets k\u00f6nnen Mediaqueries eingef\u00fcgt werden. Mit Mediaqueries k\u00f6nnen Bedingungen definiert weden um CSS-Regeln konditional zu laden. Folgend sind die wesentlichen Bestandteile eine Mediaquery: Eine Mediaquery wird syntaktisch mit dem @media Schl\u00fcsselwort eingeleitet. Als Bedingung k\u00f6nnen Mediatypes genutzt werden. Als Bedingung k\u00f6nnen Mediafeatures genutzt werden. Mediatype bzw. Mediafeatures k\u00f6nnen \u00fcber logische Verkn\u00fcpfungen kombiniert werden. Beispiel einer Mediaquery: @media screen and (min-width: 420px) { .example-class { font-size: 16px; /* ... */ } } Mediaquery: Media Features Feature Beschreibung width , min-width , max-width Breite des Viewports height , min-height , max-height H\u00f6he des Viewport aspect-ratio Verh\u00e4ltnis von H\u00f6he zu Breite des Viewport orientation Portrait oder Landscape Orientierung des Viewport hover Unterst\u00fctzt das Eingabeger\u00e4t den hover-Effekt (zB Desktop: ja / Smartphone u. Tablet: nein) Neben den Features, welche in der Tabelle beschrieben wurden und g\u00e4ngig sind, gibt es noch viele weitere sehr spezielle Features. Beispiele f\u00fcr weitere Features: resolution , scan , grid , update , color , monochrome Mediaquery: Logische Verkn\u00fcpfungen Verkn\u00fcpfung Beschreibung and Und-Verkn\u00fcpfung: Es m\u00fcssen alle Bedingungen der Mediaquery WAHR sein damit die CSS-Regeln geladen werden. , Oder-Verkn\u00fcpfung: Es muss zumindest eine Bedingung der Mediaquery WAHR sein damit die CSS-Regeln geladen werden. not Negation: Alles au\u00dfer die angegebene Bindung muss WAHR sein damit die CSS-Regeln geladen werden. only Auf alten Browsern (welche Mediaqueries nicht umf\u00e4nglich unterst\u00fctzen) kann mit only veranlasst werden, dass dieser die Mediaquery ignoriert (zB IE6 \u2013 IE8) Mediaquery Beispiele Die folgende Mediaquery wird f\u00fcr den Mediatype Bildschirm und eine Viewport Gr\u00f6\u00dfe zwischen 768px und 991px aktiviert: @media screen and (min-width:768px) and (max-width:991px) { /* */ } Die folgende Mediaquery wird f\u00fcr den Mediatype Bildschirm und Druck aktiviert: @media screen, print { /* */ } Die folgende Mediaquery wird f\u00fcr Ger\u00e4te aktiviert, welche den Hover-Effekt unterst\u00fctzen (Vorraussetzung einer Maus-basierten Navigation) @media (hover: hover) { /* */ }","title":"05 Responsive Web"},{"location":"05_Responsive_Web/#responsive-web","text":"Das WWW kann grunds\u00e4tzlich \u00fcber unterschiedliche Ger\u00e4te betrachtet und bedient werden. Nahezu f\u00fcr jedes Ger\u00e4t gibt es einen Web-Browser. Responsive Web Design (RWD) ist ein Ansatz um Webseiten so zu gestalten, dass sich ihr Layout bzw. die allgemeine Gestaltung und Bedienung auf die verf\u00fcgbaren M\u00f6glichkeiten (zB Bildschirmgr\u00f6\u00dfe) des entsprechenden Ger\u00e4tes anpasst.","title":"Responsive Web"},{"location":"05_Responsive_Web/#viewport","text":"Mit den ersten Smartphones (unter anderem iPhone 1) wurde ersichtlich, dass die Erstellung von Webseiten mit fixen Breiten ein Problem darstellt. Am Smartphone konnte nur ein kleiner Ausschnitt einer Webseite angezeigt werden. Als L\u00f6sung wurde ein sog. Viewport definiert. Ein Viewport stellt eine \"virtuelle\" Zeichenfl\u00e4che dar, welche eine dedizierte Breite und H\u00f6he aufweist (von Web-Browsern unterschiedliche festgelegt zB mit Breite 980px). Die Webseite wird auf die virtuelle Zeichenfl\u00e4che geladen und diese Zeichenfl\u00e4che wird dann angepasst und auf das tats\u00e4chliche Display projiziert. Im folgenden Bild wird gezeigt wie sich das Problem der \"fixen Breite\" einer Webseite darstellt: Im folgenden Bild wird gezeigt wie das Problem der \"fixen Breite\" einer Webseite durch die Einf\u00fchrung des Viewport gel\u00f6st wurde: Die beschriebene Viewport-Projektion ist bei Smartphone und Tablet Browsern aktiviert. Bei speziell angepassten mobilen Webseiten f\u00fcrht dies jedoch zum Problem, dass die Default-Viewport-Gr\u00f6\u00dfe zu gro\u00df ist und der rechte Bereit wei\u00df bleibt. Deshalb kann mit dem speziellen viewport-Metatag eine Anpassung der Viewport-Gr\u00f6\u00dfe durchgef\u00fchrt werden. <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"> F\u00fcr das viewport-Metatag k\u00f6nnen unter anderem folgende Parameter spezifiziert werden: width , initial-scale , minimum-scale oder maximum-scale . Im folgenden Bild wird gezeigt wie sich die Anpassung der Viewport Gr\u00f6\u00dfe auf die Darstellung am Smartphone auswirkt: Beispiele von Pixel bzw. Viewport Gr\u00f6\u00dfen popul\u00e4rer Ger\u00e4te: Bezeichnung Pixel Viewport iPhone XR 828x1792 414x896 iPhone 8 750x1334 375x667 iPhone 7 750x1334 375x667 iPad Air 1 & 2 1536x2048 768x1024 Google Pixel 3 1080x2160 412x824 Samsung Galaxy S9 1440x2960 360x740 Nexus 9 1536x2048 768x1024","title":"Viewport"},{"location":"05_Responsive_Web/#mediatypes","text":"Mit Mediatypes werden unterschiedliche Ausgabeger\u00e4te definiert. Durch Angabe eines Mediatypes bei der Definition eines Stylesheets k\u00f6nnen diese medienspezifisch geladen werden. Die Mediatypes all , print , screen und speech sind definiert. Der Mediatype all ist dabei als Defaultwert zu verstehen. Im folgenden Beispiel wird gezeigt wie ein Stylesheet eingebunden werden kann, welcher nur f\u00fcr Mediatype print geladen werden soll: <link rel=\"stylesheet\" type=\"text/css\" href=\"beispiel.css\" media=\"print\">","title":"Mediatypes"},{"location":"05_Responsive_Web/#mediaqueries","text":"Innerhalb von CSS-Stylescheets k\u00f6nnen Mediaqueries eingef\u00fcgt werden. Mit Mediaqueries k\u00f6nnen Bedingungen definiert weden um CSS-Regeln konditional zu laden. Folgend sind die wesentlichen Bestandteile eine Mediaquery: Eine Mediaquery wird syntaktisch mit dem @media Schl\u00fcsselwort eingeleitet. Als Bedingung k\u00f6nnen Mediatypes genutzt werden. Als Bedingung k\u00f6nnen Mediafeatures genutzt werden. Mediatype bzw. Mediafeatures k\u00f6nnen \u00fcber logische Verkn\u00fcpfungen kombiniert werden. Beispiel einer Mediaquery: @media screen and (min-width: 420px) { .example-class { font-size: 16px; /* ... */ } }","title":"Mediaqueries"},{"location":"05_Responsive_Web/#mediaquery-media-features","text":"Feature Beschreibung width , min-width , max-width Breite des Viewports height , min-height , max-height H\u00f6he des Viewport aspect-ratio Verh\u00e4ltnis von H\u00f6he zu Breite des Viewport orientation Portrait oder Landscape Orientierung des Viewport hover Unterst\u00fctzt das Eingabeger\u00e4t den hover-Effekt (zB Desktop: ja / Smartphone u. Tablet: nein) Neben den Features, welche in der Tabelle beschrieben wurden und g\u00e4ngig sind, gibt es noch viele weitere sehr spezielle Features. Beispiele f\u00fcr weitere Features: resolution , scan , grid , update , color , monochrome","title":"Mediaquery: Media Features"},{"location":"05_Responsive_Web/#mediaquery-logische-verknupfungen","text":"Verkn\u00fcpfung Beschreibung and Und-Verkn\u00fcpfung: Es m\u00fcssen alle Bedingungen der Mediaquery WAHR sein damit die CSS-Regeln geladen werden. , Oder-Verkn\u00fcpfung: Es muss zumindest eine Bedingung der Mediaquery WAHR sein damit die CSS-Regeln geladen werden. not Negation: Alles au\u00dfer die angegebene Bindung muss WAHR sein damit die CSS-Regeln geladen werden. only Auf alten Browsern (welche Mediaqueries nicht umf\u00e4nglich unterst\u00fctzen) kann mit only veranlasst werden, dass dieser die Mediaquery ignoriert (zB IE6 \u2013 IE8)","title":"Mediaquery: Logische Verkn\u00fcpfungen"},{"location":"05_Responsive_Web/#mediaquery-beispiele","text":"Die folgende Mediaquery wird f\u00fcr den Mediatype Bildschirm und eine Viewport Gr\u00f6\u00dfe zwischen 768px und 991px aktiviert: @media screen and (min-width:768px) and (max-width:991px) { /* */ } Die folgende Mediaquery wird f\u00fcr den Mediatype Bildschirm und Druck aktiviert: @media screen, print { /* */ } Die folgende Mediaquery wird f\u00fcr Ger\u00e4te aktiviert, welche den Hover-Effekt unterst\u00fctzen (Vorraussetzung einer Maus-basierten Navigation) @media (hover: hover) { /* */ }","title":"Mediaquery Beispiele"},{"location":"08_Praktische_Aspekte/","text":"Praktische Aspekte Web-Browser Kompatibilit\u00e4t Web-Browser Entwicklerwerkzeuge","title":"08 Praktische Aspekte"},{"location":"08_Praktische_Aspekte/#praktische-aspekte","text":"","title":"Praktische Aspekte"},{"location":"08_Praktische_Aspekte/#web-browser-kompatibilitat","text":"","title":"Web-Browser Kompatibilit\u00e4t"},{"location":"08_Praktische_Aspekte/#web-browser-entwicklerwerkzeuge","text":"","title":"Web-Browser Entwicklerwerkzeuge"},{"location":"slides/01_Einf\u00fchrung/","text":"World Wide Web (WWW) Das WWW ist ein globales und verteiltes Informationssystem bestehend aus Webseiten und anderen Web-Ressourcen (zB Bilder, Videos, ...) Web-Ressourcen werden auf Web-Servern bereitgestellt und sind \u00f6ffentlich abrufbar Web-Ressourcen sind \u00fcber einen Uniform Resource Locator (URL) eindeutig identifiziert und abrufbar Webseiten sind im WWW \u00fcber Hyperlinks miteinander verkn\u00fcpft, welche wiederum als URL ausgedr\u00fcckt werden Webseiten k\u00f6nnen \u00fcber Web-Browser (auch Web-Clients) geladen und bedient werden .max.center[ ] URLs: Identifkation und Lokalisierung von Web-Ressourcen Eine URL ist eine global eindeutige \"Adresse\" einer Web-Ressource Zus\u00e4tzlich zur Identifikation gibt eine URL Aufschluss \u00fcber den Speicherort einer Web-Ressource (Lokalisierung) Beispiel einer URL: userinfo host port \u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2534\u2510 https://john.doe@www.example.com:123/abc/def/?name=bla&q=abc#top \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u252c\u2518 scheme authority path query fragment Domain Name System (DNS) Knoten im Internet sind \u00fcber IP-Adressen identifiziert (zB 80.93.34.98) IP-Adressen sind \u00e4hnlich wie Telefonnummern f\u00fcr Menschen schwer einpr\u00e4gsam DNS verwaltet Klarnamen zu IP-Adressen Beispielhafter Auszug aus der Datenbank eines DNS-Servers: wikipedia.org 185.102.12.2 fh-kufstein.ac.at 85.234.32.2 ... ... HTTP-Protokoll: Kommunikation zwischen Web-Browser und Web-Server Das Hypertext Transfer Protocol (HTTP) ist ein zustandsloses Netzwerkprotokoll zur \u00dcbertragung von Daten in Rechnernetzen Es wird haupts\u00e4chlich eingesetzt, um Webseiten aus dem WWW zu laden Die Kommunikation folgt dem Anfrage/Antwort Schema Der Client sendet eine Anfrage und bekommt eine Antwort vom Server .max.center[ ] W3C: World Wide Web Conssortium Das World Wide Web Consortium (W3C) ist die prim\u00e4re internationale Standardisierungsorganisation des WWW Gr\u00fcnder und Vorsitzender des W3C ist Tim Berners-Lee Der W3C Standadisierungsprozess gliedert sich in Dokumente mit unterschiedlichem Reifegrad: Working Draft (WD) Candidate Recommendation (CR) Proposed Recommendation (PR) W3C Recommendation (REC) Beispiele f\u00fcr W3C Recommendations sind HTML, XML, CSS, PNG, SVG, DOM Clientseitige Web-Technologien Zur Entwicklung von Webseiten bzw. Web-Anwendungen werden standardisierte Web-Technologien genutzt: Hypertext Markup Language (HTML): HTML wird genutzt um Inhalte zu strukturieren Cascading Stylesheets (CSS): CSS wird genutzt um Inhalte zu formatierung bzw. zu gestalten JavaScript: Mit JavaScript wird Verhalten und Dynamik in eine Webseite integriert Web-Browser I Ein Web-Browser ist eine Software-Applikation, welche genutzt wird um auf das WWW zuzugreifen. Die popul\u00e4rsten Web-Browser sind Chrome , Firefox , Safari , Internet Explorer , Edge und Opera Die Marktanteile der Web-Browser sind unterschiedlich verteilt: .max[ ] Web-Browser II Alle Web-Browser bieten \u00e4hnliche Bedienelemente .max[ ] Tabs Addressleiste Vor- und Zur\u00fcck-Buttons Refresh-Button bzw. Stop-Button Home-Button Bookmarks/Lesezeichen Download-Historie Extensions","title":"World Wide Web (WWW)"},{"location":"slides/01_Einf\u00fchrung/#world-wide-web-www","text":"Das WWW ist ein globales und verteiltes Informationssystem bestehend aus Webseiten und anderen Web-Ressourcen (zB Bilder, Videos, ...) Web-Ressourcen werden auf Web-Servern bereitgestellt und sind \u00f6ffentlich abrufbar Web-Ressourcen sind \u00fcber einen Uniform Resource Locator (URL) eindeutig identifiziert und abrufbar Webseiten sind im WWW \u00fcber Hyperlinks miteinander verkn\u00fcpft, welche wiederum als URL ausgedr\u00fcckt werden Webseiten k\u00f6nnen \u00fcber Web-Browser (auch Web-Clients) geladen und bedient werden .max.center[ ]","title":"World Wide Web (WWW)"},{"location":"slides/01_Einf\u00fchrung/#urls-identifkation-und-lokalisierung-von-web-ressourcen","text":"Eine URL ist eine global eindeutige \"Adresse\" einer Web-Ressource Zus\u00e4tzlich zur Identifikation gibt eine URL Aufschluss \u00fcber den Speicherort einer Web-Ressource (Lokalisierung) Beispiel einer URL: userinfo host port \u250c\u2500\u2500\u2534\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2534\u2510 https://john.doe@www.example.com:123/abc/def/?name=bla&q=abc#top \u2514\u2500\u252c\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\u2514\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u252c\u2518 scheme authority path query fragment","title":"URLs: Identifkation und Lokalisierung von Web-Ressourcen"},{"location":"slides/01_Einf\u00fchrung/#domain-name-system-dns","text":"Knoten im Internet sind \u00fcber IP-Adressen identifiziert (zB 80.93.34.98) IP-Adressen sind \u00e4hnlich wie Telefonnummern f\u00fcr Menschen schwer einpr\u00e4gsam DNS verwaltet Klarnamen zu IP-Adressen Beispielhafter Auszug aus der Datenbank eines DNS-Servers: wikipedia.org 185.102.12.2 fh-kufstein.ac.at 85.234.32.2 ... ...","title":"Domain Name System (DNS)"},{"location":"slides/01_Einf\u00fchrung/#http-protokoll-kommunikation-zwischen-web-browser-und-web-server","text":"Das Hypertext Transfer Protocol (HTTP) ist ein zustandsloses Netzwerkprotokoll zur \u00dcbertragung von Daten in Rechnernetzen Es wird haupts\u00e4chlich eingesetzt, um Webseiten aus dem WWW zu laden Die Kommunikation folgt dem Anfrage/Antwort Schema Der Client sendet eine Anfrage und bekommt eine Antwort vom Server .max.center[ ]","title":"HTTP-Protokoll: Kommunikation zwischen Web-Browser und Web-Server"},{"location":"slides/01_Einf\u00fchrung/#w3c-world-wide-web-conssortium","text":"Das World Wide Web Consortium (W3C) ist die prim\u00e4re internationale Standardisierungsorganisation des WWW Gr\u00fcnder und Vorsitzender des W3C ist Tim Berners-Lee Der W3C Standadisierungsprozess gliedert sich in Dokumente mit unterschiedlichem Reifegrad: Working Draft (WD) Candidate Recommendation (CR) Proposed Recommendation (PR) W3C Recommendation (REC) Beispiele f\u00fcr W3C Recommendations sind HTML, XML, CSS, PNG, SVG, DOM","title":"W3C: World Wide Web Conssortium"},{"location":"slides/01_Einf\u00fchrung/#clientseitige-web-technologien","text":"Zur Entwicklung von Webseiten bzw. Web-Anwendungen werden standardisierte Web-Technologien genutzt: Hypertext Markup Language (HTML): HTML wird genutzt um Inhalte zu strukturieren Cascading Stylesheets (CSS): CSS wird genutzt um Inhalte zu formatierung bzw. zu gestalten JavaScript: Mit JavaScript wird Verhalten und Dynamik in eine Webseite integriert","title":"Clientseitige Web-Technologien"},{"location":"slides/01_Einf\u00fchrung/#web-browser-i","text":"Ein Web-Browser ist eine Software-Applikation, welche genutzt wird um auf das WWW zuzugreifen. Die popul\u00e4rsten Web-Browser sind Chrome , Firefox , Safari , Internet Explorer , Edge und Opera Die Marktanteile der Web-Browser sind unterschiedlich verteilt: .max[ ]","title":"Web-Browser I"},{"location":"slides/01_Einf\u00fchrung/#web-browser-ii","text":"Alle Web-Browser bieten \u00e4hnliche Bedienelemente .max[ ] Tabs Addressleiste Vor- und Zur\u00fcck-Buttons Refresh-Button bzw. Stop-Button Home-Button Bookmarks/Lesezeichen Download-Historie Extensions","title":"Web-Browser II"},{"location":"slides/02_HTML/","text":"","title":"02 HTML"}]}